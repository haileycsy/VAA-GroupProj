---
title: "Topic Modelling Code"
author: "Shaun Tan"
date: "6/3/2023"
date-modified: "`r Sys.Date()`"
format:
  html:
    code-fold: False
    code-summary: "Show the code"
execute:
  warning: False
  echo: True
  eval: True
---

```{r}
pacman::p_load(jsonlite, tidygraph, ggraph, visNetwork, gralayouts, ggforce, tidytext, tidyverse, skimr, patchwork, ggdist, ggridges, ggthemes, scales, lsa, topicmodels, ldatuning)
```

```{r}
mc3_data <-
  jsonlite::fromJSON("data/MC3.json")
```

## 2.2 Extracting Edges

```{r}
mc3_edges <-
  as_tibble(mc3_data$links) %>%
    distinct() %>%
  mutate(source = as.character(source),
         target = as.character(target),
         type = as.character(type)) %>%
  group_by(source, target, type) %>%
  summarise(weights = n()) %>%
  filter(source!=target) %>%
  ungroup()
```

## 2.3 Extracting Nodes

```{r}
mc3_nodes <- as_tibble(mc3_data$nodes) %>%
# distinct() %>%
  mutate(country = as.character(country),
         id = as.character(id),
         product_services = as.character(product_services),
         revenue_omu = as.numeric(as.character(revenue_omu)),
         type = as.character(type)) %>%
  select(id, country, type, revenue_omu, product_services)
```

```{r}
## Token_nodes
token_nodes <- mc3_nodes %>%
  filter(type=='Company') %>% 
  unnest_tokens(word, 
                product_services)
```

```{r}
# Removing Stop words
stopwords_removed <- token_nodes %>%
  filter(!word %in% c('unknown', 'products','related')) %>% 
  anti_join(stop_words)
```

Start of Topic Modelling

```{r}
dtm<- stopwords_removed %>%
  count(id, word) %>% 
  cast_dtm(id, word, n) %>%  
  as.matrix()
```

```{r}
# Extract probability of the topic for each company
lda_topics <- LDA(
  dtm,
  k = 5,
  method = "Gibbs",
  control = list(seed=42)
  ) %>% 
  tidy(matrix = "gamma")
```

```{r}
# Summarize company revenue
company<-mc3_nodes %>%
  filter(type=='Company') %>% 
  group_by(id) %>% 
  summarise(revenue=sum(revenue_omu))
```

```{r}
# Assign topic with the highest gamma score to the document/company
cp_map<-lda_topics %>% 
  group_by(document) %>% 
  summarise(gamma=max(gamma)) 

cp_map<-cp_map %>% 
  left_join(lda_topics) %>% 
  mutate(topic=recode(topic, '1'="accessories_materials",
                      '2'="food",
                      '3'="equipment",
                      '4'="fish_seafood",
                      '5'="services")) %>%
  rename("Industry"="topic") %>% 
  select(document, Industry)
```

```{r}
# Use left join to join back to company revenue info
company<-company %>%
  inner_join(cp_map, by=c("id"="document"))

# Drop those company with unknown industry
company<- company %>% 
  drop_na(Industry) %>% 
  drop_na(revenue)
```
