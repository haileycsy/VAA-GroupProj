[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About The Team\n\n\n\n\nflowchart TD\nA{Finding\\nNEMO}--- B[Network-Enabled Maritime Observations]\nB --> C(Hailey)\nB --> D(Leonard)\nB --> E(Shaun)"
  },
  {
    "objectID": "fishy_business.html",
    "href": "fishy_business.html",
    "title": "Fishy Business",
    "section": "",
    "text": "VAST Challenge 2023: Mini-Challenge 3"
  },
  {
    "objectID": "fishy_business.html#r-packages",
    "href": "fishy_business.html#r-packages",
    "title": "Fishy Business",
    "section": "2.1 R Packages",
    "text": "2.1 R Packages\nThe following packages are used for this study:\n\njsonlite to read and process raw .json data files\ntidyverse, a collection of packages for data analysis (particularly dplyr for data manipulation)\nskimr and Hmisc for generating summary statistics of dataframes and variables\nDT, kableandkableExtra` for styling tables from dataframes\nggplot2 and ggpubr for plot visualisations\nscales to complement ggplot2, specifically for specifying axes breaks\nggrain for raincloud plots to visualise density distributions\npatchwork for multiple plot layouts\nvisNetwork, ggraph and igraph for network graph visualisations\nggthemes to standardise plot aesthetics\ntidytext, tm & wordcloud2 for text mining and visualisation\nldatuning, lsa and topicmodels for topic modeling\n\n\n\nCode\npacman::p_load(jsonlite, tidyverse, skimr, Hmisc, DT, kable, kableExtra, ggplot2, scales, ggthemes, visNetwork, ggraph, igraph, tidygraph, ggrain, patchwork, ggpubr, htmlwidgets, treemapify, tidytext, tm, wordcloud2, ldatuning, lsa, topicmodels)"
  },
  {
    "objectID": "fishy_business.html#unpacking-the-data",
    "href": "fishy_business.html#unpacking-the-data",
    "title": "Fishy Business",
    "section": "2.2 Unpacking the Data",
    "text": "2.2 Unpacking the Data\njsonlite package was used to read .json files\n\nmc3 <- fromJSON(\"data/MC3.json\")\n\nmc3 challenge data is an undirected graph with links and nodes dataframes. These are stored as lists instead of vector columns. Nodes and Links are extracted as separate dataframes for analysis from the .json file:\n\n\nCode\nmc3_links <- as_tibble(mc3$links) %>%\n  # Change all variable types to character to create dataframe\n  mutate(source = as.character(source),\n         target = as.character(target),\n         type = as.character(type)) %>%\n  group_by(source, target, type) %>%\n  summarise(weights = n()) %>%\n  filter(source != target) %>%\n  ungroup()\n\nmc3_nodes <- as_tibble(mc3$nodes) %>%\n  mutate(id = as.character(id), \n         type = as.character(type), \n         country = as.character(country), \n         product_services = as.character(product_services),\n  # Convert to character first to unlist, then revert to numeric form \n         revenue_omu = as.numeric(as.character(revenue_omu))) %>%\n  # Reorganize columns \n  select(id, country, type, revenue_omu, product_services)\n\n\n\nNodesLinks\n\n\n\n\n\n\n\nData summary\n\n\n\n\nName\n\n\nmc3_nodes\n\n\n\n\nNumber of rows\n\n\n27622\n\n\n\n\nNumber of columns\n\n\n5\n\n\n\n\n_______________________\n\n\n\n\n\n\nColumn type frequency:\n\n\n\n\n\n\ncharacter\n\n\n4\n\n\n\n\nnumeric\n\n\n1\n\n\n\n\n________________________\n\n\n\n\n\n\nGroup variables\n\n\nNone\n\n\n\n\n\nVariable type: character\n\n\n\n\n\nskim_variable\n\n\nn_missing\n\n\ncomplete_rate\n\n\nmin\n\n\nmax\n\n\nempty\n\n\nn_unique\n\n\nwhitespace\n\n\n\n\n\n\nid\n\n\n0\n\n\n1\n\n\n6\n\n\n64\n\n\n0\n\n\n22929\n\n\n0\n\n\n\n\ncountry\n\n\n0\n\n\n1\n\n\n2\n\n\n15\n\n\n0\n\n\n100\n\n\n0\n\n\n\n\ntype\n\n\n0\n\n\n1\n\n\n7\n\n\n16\n\n\n0\n\n\n3\n\n\n0\n\n\n\n\nproduct_services\n\n\n0\n\n\n1\n\n\n4\n\n\n1737\n\n\n0\n\n\n3244\n\n\n0\n\n\n\n\n\nVariable type: numeric\n\n\n\n\n\nskim_variable\n\n\nn_missing\n\n\ncomplete_rate\n\n\nmean\n\n\nsd\n\n\np0\n\n\np25\n\n\np50\n\n\np75\n\n\np100\n\n\nhist\n\n\n\n\n\n\nrevenue_omu\n\n\n21515\n\n\n0.22\n\n\n1822155\n\n\n18184433\n\n\n3652.23\n\n\n7676.36\n\n\n16210.68\n\n\n48327.66\n\n\n310612303\n\n\n▇▁▁▁▁\n\n\n\n\n\n\n\n\nSummary statistics of Nodes data shows that there are 27622 rows but fewer unique ids (22929). This suggests that there are either duplicated rows in the data, or ids could have different entries with variations in data for different columns (eg company operating in different countries will have 1 row per country operating in).\nproduct_services also has 3244 unique values, with character range of 4- 1737, indicating a need to recode the descriptions of products or services into usable categories for further analysis.\nrevenue_omu has 21515 missing values, representing companies that have unreported revenue. This may be a possible indicator of fishy activity. The histogram and percentile values displayed also suggests a highly right-skewed distribution of revenue.\n\n\n\n\n\n\n\n\nData summary\n\n\n\n\nName\n\n\nmc3_links\n\n\n\n\nNumber of rows\n\n\n24036\n\n\n\n\nNumber of columns\n\n\n4\n\n\n\n\n_______________________\n\n\n\n\n\n\nColumn type frequency:\n\n\n\n\n\n\ncharacter\n\n\n3\n\n\n\n\nnumeric\n\n\n1\n\n\n\n\n________________________\n\n\n\n\n\n\nGroup variables\n\n\nNone\n\n\n\n\n\nVariable type: character\n\n\n\n\n\nskim_variable\n\n\nn_missing\n\n\ncomplete_rate\n\n\nmin\n\n\nmax\n\n\nempty\n\n\nn_unique\n\n\nwhitespace\n\n\n\n\n\n\nsource\n\n\n0\n\n\n1\n\n\n6\n\n\n700\n\n\n0\n\n\n12856\n\n\n0\n\n\n\n\ntarget\n\n\n0\n\n\n1\n\n\n6\n\n\n28\n\n\n0\n\n\n21265\n\n\n0\n\n\n\n\ntype\n\n\n0\n\n\n1\n\n\n16\n\n\n16\n\n\n0\n\n\n2\n\n\n0\n\n\n\n\n\nVariable type: numeric\n\n\n\n\n\nskim_variable\n\n\nn_missing\n\n\ncomplete_rate\n\n\nmean\n\n\nsd\n\n\np0\n\n\np25\n\n\np50\n\n\np75\n\n\np100\n\n\nhist\n\n\n\n\n\n\nweights\n\n\n0\n\n\n1\n\n\n1\n\n\n0.01\n\n\n1\n\n\n1\n\n\n1\n\n\n1\n\n\n2\n\n\n▇▁▁▁▁\n\n\n\n\n\n\n\n\nSummary statistics of Links data reports 12856 unique source and 21265 unique target ids. As this dataframe lists out the links between companies (source) and individuals (target), this reveals that some companies may be linked to multiple individuals.\nweights refers to the sum of rows grouped by source, target and type. This is mainly 1, with some 2s suggesting duplicates in the data."
  },
  {
    "objectID": "fishy_business.html#data-wrangling",
    "href": "fishy_business.html#data-wrangling",
    "title": "Fishy Business",
    "section": "2.3 Data Wrangling",
    "text": "2.3 Data Wrangling\n\nI. NodesII. Links\n\n\nI. Checking for Duplicates\n\n\nCode\nmc3_nodes[duplicated(mc3_nodes),]\n\n\n# A tibble: 2,595 × 5\n   id                              country type    revenue_omu product_services\n   <chr>                           <chr>   <chr>         <dbl> <chr>           \n 1 Smith Ltd                       ZH      Company          NA Unknown         \n 2 Williams LLC                    ZH      Company          NA Unknown         \n 3 Garcia Inc                      ZH      Company          NA Unknown         \n 4 Walker and Sons                 ZH      Company          NA Unknown         \n 5 Walker and Sons                 ZH      Company          NA Unknown         \n 6 Smith LLC                       ZH      Company          NA Unknown         \n 7 Smith Ltd                       ZH      Company          NA Unknown         \n 8 Romero Inc                      ZH      Company          NA Unknown         \n 9 Niger River   Marine life       Oceanus Company          NA Unknown         \n10 Coastal Crusaders AS Industrial Oceanus Company          NA Unknown         \n# ℹ 2,585 more rows\n\n\nThere are 2,595 duplicated entries. These are removed so as to prevent skewing of aggregate figures in subsequent analyses:\n\n\nCode\nmc3_nodes <- unique(mc3_nodes)\n\n\nII. Are there nodes with multiple listings of products/services?\n\n\nCode\nmc3_nodes_agg1 <- mc3_nodes %>%\n  group_by(id, country, type) %>%\n  summarise(count_prod = n(),\n            revenue_omu = sum(revenue_omu)) %>%\n  ungroup() %>%\n  arrange(desc(count_prod))\n\nkable(head(mc3_nodes_agg1, 10)) %>%\n  kable_styling(bootstrap_options = c(\"striped\", \"hover\", \"condensed\", \"responsive\"))\n\n\n\n\n \n  \n    id \n    country \n    type \n    count_prod \n    revenue_omu \n  \n \n\n  \n    Irish Mackerel S.A. de C.V. Marine biology \n    Oceanus \n    Company \n    11 \n    NA \n  \n  \n    Smith Inc \n    ZH \n    Company \n    9 \n    NA \n  \n  \n    Brown Inc \n    ZH \n    Company \n    6 \n    NA \n  \n  \n    Johnson LLC \n    ZH \n    Company \n    6 \n    52509.79 \n  \n  \n    Davis Group \n    ZH \n    Company \n    5 \n    103954.91 \n  \n  \n    Jones PLC \n    ZH \n    Company \n    5 \n    NA \n  \n  \n    Kerala   S.A. de C.V. Express \n    Oceanus \n    Company \n    5 \n    NA \n  \n  \n    Smith LLC \n    ZH \n    Company \n    5 \n    NA \n  \n  \n    Gonzalez PLC \n    ZH \n    Company \n    4 \n    92610.63 \n  \n  \n    Hernandez and Sons \n    ZH \n    Company \n    4 \n    NA \n  \n\n\n\n\n\nThere are several ids from the same country and type, but different listing of products_services values. These nodes also have unreported revenue_omu, which could be an indicator of fishy activity, where same companies report different products/services in the ledger to avoid detection. The products_services column is collapsed so as to give a clearer picture of the company activity:\n\n\nCode\nmc3_nodes_new <- mc3_nodes %>%\n  group_by(id, country, type) %>%\n  summarise(revenue_omu = sum(revenue_omu),\n            product_services = paste(product_services, collapse = \", \"))\n\nkable(head(mc3_nodes_new, 10)) %>%\n  kable_styling(bootstrap_options = c(\"striped\", \"hover\", \"condensed\", \"responsive\"))\n\n\n\n\n \n  \n    id \n    country \n    type \n    revenue_omu \n    product_services \n  \n \n\n  \n    1 AS Marine sanctuary \n    Isliandor \n    Company \n    NA \n    Scrapbook embellishment, DIY kits, beads, styrofoam, doll accessories, crafty tools, funfoam shapes, stencils, wood bits, ribbons, craft paper \n  \n  \n    1 Eel Corporation Transport \n    Oceanus \n    Company \n    19666.673 \n    Unknown \n  \n  \n    1 Ltd. Corporation Transport \n    Coral Solis \n    Company \n    5364.317 \n    Unknown \n  \n  \n    1 Ltd. Liability Co \n    Oceanus \n    Company \n    7786.673 \n    Unknown \n  \n  \n    1 Ltd. Liability Co Cargo \n    Mawandia \n    Company \n    NA \n    Unknown \n  \n  \n    1 S.A. de C.V. \n    Oceanus \n    Company \n    NA \n    Unknown \n  \n  \n    1 Swordfish Ltd Solutions \n    Oceanus \n    Company \n    6756.673 \n    Unknown \n  \n  \n    1 and Sagl Forwading \n    Kondanovia \n    Company \n    18529.114 \n    Total logistics solutions \n  \n  \n    2 Flounder ОАО Consultants \n    Oceanus \n    Company \n    10386.673 \n    Sauce and condiment, drinks, canned food, frozen fish and seafood and meat, noodles, rice products, dried food, dried spices, tea leaves, beverages and mix, snacks, preserved and pickled food, and ready to eat pouches \n  \n  \n    2 Limited Liability Company \n    Marebak \n    Company \n    NA \n    Canning, processing and manufacturing of seafood and other aquatic products, Unknown \n  \n\n\n\n\n\n\n\nHow many links are there per company?\n\n\nCode\nlinks_count <- mc3_links %>%\n  group_by(source) %>%\n  summarise(count = n()) %>%\n  ungroup() %>%\n  arrange(desc(count))\n\nkable(head(links_count, 10)) %>%\n  kable_styling(bootstrap_options = c(\"striped\", \"hover\", \"condensed\", \"responsive\"))\n\n\n\n\n \n  \n    source \n    count \n  \n \n\n  \n    Vespuci Sandbar Sp Brothers \n    120 \n  \n  \n    Dutch Oyster Sagl Cruise ship \n    91 \n  \n  \n    Niger Bend   AS Express \n    72 \n  \n  \n    Ola de la Costa N.V. \n    65 \n  \n  \n    Wave Warriors S.A. de C.V. Express \n    62 \n  \n  \n    Caracola del Este Enterprises \n    54 \n  \n  \n    Bahía de Plata Submarine \n    49 \n  \n  \n    BlueTide GmbH & Co. KG \n    49 \n  \n  \n    Brisa del Mar Current Inc Express \n    49 \n  \n  \n    Luangwa River   Limited Liability Company Holdings \n    49 \n  \n\n\n\n\n\n\n\nCode\np_links_count <-\n  ggplot(links_count, \n       aes(x = 1, \n           y = count)\n  ) +\n  geom_rain(\n    color = \"grey20\",\n    alpha = .5\n  ) +\n  scale_y_continuous(\n    breaks = scales::pretty_breaks(n=5)\n  ) +\n  geom_rug() +\n  labs(\n    title = \"Skewed Distribution of Company Links\"\n  ) +\n  theme_fivethirtyeight()+\n  theme(\n    axis.ticks.y = element_blank(),\n    axis.title = element_blank(),\n    axis.text.y = element_blank(),\n    panel.background = element_rect(fill=\"#dfdfeb\",colour=\"#dfdfeb\"),\n    plot.background = element_rect(fill=\"#dfdfeb\",colour=\"#dfdfeb\")\n  ) +\n  coord_flip()\n\np_links_count\n\n\n\n\n\nAggregation of the source variable reveals that there are companies with large numbers of links. This distribution is also highly right-skewed, indicating that most companies only recorded a single link. As more links point toward larger (and often more complex) networks, this could be an indicator of possible fishy activity.\nII. Cleaning up grouped data in Source column\nThe aggregated dataframe also revealed that the Source column contains vector-like strings with multiple company names, eg. c(“The Sea Turtle Company”, “The Sea Turtle Company”) and c(“Haryana s Catchers ОАО Enterprises”, “Drakensberg Limited Liability Company”).:\n\n\nCode\nmc3_links_sus <- mc3_links %>%\n  filter(grepl(\"^c\\\\(\", source)) \n\nkable(head(mc3_links_sus, 10)) %>%\n  kable_styling(bootstrap_options = c(\"striped\", \"hover\", \"condensed\", \"responsive\"))\n\n\n\n\n \n  \n    source \n    target \n    type \n    weights \n  \n \n\n  \n    c(\"1 Ltd. Liability Co\", \"1 Ltd. Liability Co\") \n    Yesenia Oliver \n    Company Contacts \n    1 \n  \n  \n    c(\"1 Swordfish Ltd Solutions\", \"1 Swordfish Ltd Solutions\", \"Saharan Coast  BV Marine\", \"Olas del Sur Estuary\") \n    Daniel Reese \n    Company Contacts \n    1 \n  \n  \n    c(\"5 Limited Liability Company\", \"Bahía de Coral Kga\") \n    Brittany Jones \n    Beneficial Owner \n    1 \n  \n  \n    c(\"5 Limited Liability Company\", \"Bahía de Coral Kga\") \n    Elizabeth Torres \n    Beneficial Owner \n    1 \n  \n  \n    c(\"5 Limited Liability Company\", \"Bahía de Coral Kga\") \n    Sandra Roberts \n    Company Contacts \n    1 \n  \n  \n    c(\"5 Oyj Marine life\", \"Náutica del Sol Kga\") \n    Robert Miranda \n    Company Contacts \n    1 \n  \n  \n    c(\"6 GmbH & Co. KG\", \"6 GmbH & Co. KG\", \"6 GmbH & Co. KG\", \"Mar de la Luz BV\", \"Mar de la Luz BV\") \n    Monique Cummings \n    Company Contacts \n    1 \n  \n  \n    c(\"7 Ltd. Liability Co Express\", \"7 Ltd. Liability Co Express\") \n    Cassidy Sherman \n    Beneficial Owner \n    1 \n  \n  \n    c(\"7 Ltd. Liability Co Express\", \"7 Ltd. Liability Co Express\") \n    Dawn West \n    Beneficial Owner \n    1 \n  \n  \n    c(\"7 Ltd. Liability Co Express\", \"7 Ltd. Liability Co Express\") \n    Hannah Franco \n    Company Contacts \n    1 \n  \n\n\n\n\n\nThis is extracted and split into separate rows, also duplicating the original values from variables across the columns:\n\nmc3_links_new <- mc3_links %>%\n  # Extract all text within \" \"\n  mutate(source = str_extract_all(source, '\"(.*?)\"')) %>%\n  # Split into separate rows\n  unnest(source) %>%\n  # Split phrases by comma ignoring leading spaces\n  separate_rows(source, sep = \",\\\\s*\") %>%\n  mutate(source = str_remove_all(source, '\"')) %>%\n  fill(everything())\n\nIII. Checking for duplicated: rows\n\n\nCode\nmc3_links_new[duplicated(mc3_links_new),]\n\n\n# A tibble: 2,238 × 4\n   source                      target           type             weights\n   <chr>                       <chr>            <chr>              <int>\n 1 1 Ltd. Liability Co         Yesenia Oliver   Company Contacts       1\n 2 1 Swordfish Ltd Solutions   Daniel Reese     Company Contacts       1\n 3 6 GmbH & Co. KG             Monique Cummings Company Contacts       1\n 4 6 GmbH & Co. KG             Monique Cummings Company Contacts       1\n 5 Mar de la Luz BV            Monique Cummings Company Contacts       1\n 6 7 Ltd. Liability Co Express Cassidy Sherman  Beneficial Owner       1\n 7 7 Ltd. Liability Co Express Dawn West        Beneficial Owner       1\n 8 7 Ltd. Liability Co Express Hannah Franco    Company Contacts       1\n 9 7 Ltd. Liability Co Express Michael Morrison Beneficial Owner       1\n10 7 Ltd. Liability Co Express Nicole Carrillo  Beneficial Owner       1\n# ℹ 2,228 more rows\n\n\nThere are 2,238 duplicated rows for mc3_links data. These are removed using the unique() function:\n\n\nCode\nmc3_links_new <- unique(mc3_links_new)"
  },
  {
    "objectID": "fishy_business.html#who-are-the-stakeholders",
    "href": "fishy_business.html#who-are-the-stakeholders",
    "title": "Fishy Business",
    "section": "3.1 Who are the Stakeholders?",
    "text": "3.1 Who are the Stakeholders?\n\nUnderstanding Nodes and Links:\n\nNodes data seems to feature company-level information, detailing the country of operation, type of company (Company, Beneficial Owner or Company Contact), financial status (if available) and products or services rendered by the company\nLinks data features connections between individuals (target) and companies (source), identifying the nature of the relationship (Beneficial Owner or Company Contact)\n\n\nThe following table summarizes the various entities and possible roles present in the network graph:\n\n\n\n\n\n\n\n\n\nEntity/Role\nCompany\nBeneficial Owner\nCompany Contact\n\n\n\n\nCompany\n\n\n\n\n\nIndividual\n\n\n\n\n\n\n\n\nCode\nnodes_type <- mc3_nodes_new %>%\n  ggplot(\n    aes(x = type)\n  ) +\n  geom_bar() +\n # Set count annotations above bar\n  geom_text(\n    stat = \"count\",\n    aes(label = after_stat(count)),\n    vjust = -1\n  ) +  \n # Ensure than annotations are not cut off\n  ylim(0, 11000) +\n  labs(\n    title = \"Highest Count of Company\\nNodes as Beneficial Owners \"\n  ) +\n  theme_fivethirtyeight()+\n  theme(\n    axis.title.y = element_blank(),\n    axis.title.x = element_blank(),\n    panel.background = element_rect(fill=\"#dfdfeb\",colour=\"#dfdfeb\"),\n    plot.background = element_rect(fill=\"#dfdfeb\",colour=\"#dfdfeb\")\n  )\n\nlinks_type <- mc3_links_new %>%\n  ggplot(\n    aes(x = type)\n  ) +\n  geom_bar() +\n # Set count annotations above bar\n  geom_text(\n    stat = \"count\",\n    aes(label = after_stat(count)),\n    vjust = -1\n  ) +  \n # Ensure than annotations are not cut off\n  ylim(0, 11000) +\n  labs(\n    title = \"Slightly More Individual\\nOwners than Contacts\"\n  ) +\n  theme_fivethirtyeight()+\n  theme(\n    axis.title.y = element_blank(),\n    axis.title.x = element_blank(),\n    axis.ticks.y = element_blank(), \n    axis.text.y = element_blank(),\n    panel.background = element_rect(fill=\"#dfdfeb\",colour=\"#dfdfeb\"),\n    plot.background = element_rect(fill=\"#dfdfeb\",colour=\"#dfdfeb\")\n  )\n\nall_type <- nodes_type + links_type\nall_type & theme(plot.background = element_rect(fill=\"#dfdfeb\",colour=\"#dfdfeb\"))\n\n\n\n\n\n\nKey Stakeholders: Beneficial Owners\n\nCount of entities by type shows that there are a higher number of Beneficial Owners listed than Companies. This suggests that Company Ownership Structures will need to be investigated to see if there are fishy network connections\n\nCompany name suffixes indicate the type of registered company and ownership:\n\nLimited Liability or LLC refers to privately owned businesses (fewer Owners). These companies are managed by the owners or “members” that could be individuals or other business entities\nPublicly Listed Companies or PLC refers to companies owned by shareholders (larger number of owners), and are managed by a single director or board of directors\n\nInc or Corporation denotes a legal entity that is separate from its owners. However, these companies may have shareholders as well"
  },
  {
    "objectID": "fishy_business.html#are-there-entities-with-multiple-roles-or-links",
    "href": "fishy_business.html#are-there-entities-with-multiple-roles-or-links",
    "title": "Fishy Business",
    "section": "3.2 Are there Entities with Multiple Roles or Links?",
    "text": "3.2 Are there Entities with Multiple Roles or Links?\n\nNodes With Multiple RolesIndividuals with Multiple Roles\n\n\nAnalysis revealed that there are Companies with multiple roles in the Nodes dataframe:\n\n\nCode\nnodes_count <- mc3_nodes_new %>%\n  group_by(id, type) %>%\n  summarise(count = n()) %>%\n  ungroup()\n\nnodes_pivot <- nodes_count %>%\n  pivot_wider(names_from = type, values_from = count, values_fill = 0) \n\nnodes_multiple <- nodes_pivot%>%\n  filter((`Company` >=1 & `Company Contacts` >=1) |\n           (`Company` >=1 & `Beneficial Owner` >=1) |\n            (`Beneficial Owner` >=1 & `Company Contacts` >=1))\n\ndatatable(nodes_multiple)\n\n\n\n\n\n\n\n.\n\nSimilarly Named Companies\n\nData revealed companies with similar names, but different business structure suffixes: Inc, LLC, Ltd, PLC.\nFor instance, “Adams” is featured as Adams Group, Adams Inc, Adams LLC, Adams Ltd, Adams PLC and Adams and Sons.\nAs there is no unique identifier for companies and subsidiaries, there is no way to ascertain if these are in fact the same company operating under different fronts.\n\n\n\n\nData also revealed that there are individuals who have multiple ties to different companies:\n\n\nCode\nlinks_count <- mc3_links_new %>%\n  group_by(target,type) %>%\n  summarise(count = n()) %>%\n  ungroup()\n\nlinks_pivot <- links_count %>%\n  pivot_wider(names_from = type, values_from = count, values_fill = 0) %>%\n  arrange(desc(`Beneficial Owner`))\n\nlinks_multiple <- links_pivot %>%\n  filter(`Beneficial Owner` >=1 & `Company Contacts` >= 1)\n\nkable(head(links_multiple, 10)) %>%\n  kable_styling(bootstrap_options = c(\"striped\", \"hover\", \"condensed\", \"responsive\"))\n\n\n\n\n \n  \n    target \n    Beneficial Owner \n    Company Contacts \n  \n \n\n  \n    John Williams \n    3 \n    1 \n  \n  \n    Thomas Greene \n    3 \n    1 \n  \n  \n    Brittany Russell \n    2 \n    1 \n  \n  \n    Daniel Rodriguez \n    2 \n    4 \n  \n  \n    Jennifer Anderson \n    2 \n    1 \n  \n  \n    Kimberly Williams \n    2 \n    1 \n  \n  \n    Amanda Marquez \n    1 \n    2 \n  \n  \n    Amy Stephens \n    1 \n    2 \n  \n  \n    Denise Jones \n    1 \n    2 \n  \n  \n    James Walker \n    1 \n    4 \n  \n\n\n\n\n\nIn fact, distribution of roles showed that there were a higher number of Beneficial Contact Links to the companies. This could be indicative of more Publicly Listed Companies, owned by many shareholders:\n\n\nCode\n# Get number of type by source (Company)\nlinks_count <- mc3_links_new %>%\n  group_by(source, type) %>%\n  summarise(count = n()) %>%\n  ungroup()\n\n# Plot strip chart to show distibution\n\nlinks_count %>%\n  ggplot(\n    aes(x = count, \n        y = type)\n  ) +\n  geom_point(\n    alpha = .2, \n    size = 7\n  ) +\n  scale_x_continuous() +  \n  stat_summary(\n    color = \"salmon\", \n    fun = \"median\", \n    geom = \"point\", \n    size = 3.5, \n    alpha = .9\n  ) +\n  labs(title = \"Wider Spread of Beneficial Owner Count\",\n       subtitle = \"Highlighted points represent median values\",\n       x = NULL,\n       y = NULL\n  ) +\n  theme_fivethirtyeight()+\n  theme(axis.ticks.y = element_blank(),\n        panel.background = element_rect(fill=\"#dfdfeb\",colour=\"#dfdfeb\"),\n        plot.background = element_rect(fill=\"#dfdfeb\",colour=\"#dfdfeb\")\n  )"
  },
  {
    "objectID": "fishy_business.html#where-are-the-companies-operating",
    "href": "fishy_business.html#where-are-the-companies-operating",
    "title": "Fishy Business",
    "section": "3.3 Where are the Companies Operating?",
    "text": "3.3 Where are the Companies Operating?\n\n\nCode\n# Aggregate data frame by country and type\nnodes_agg <- mc3_nodes_new %>%\n  group_by(country, type) %>%\n  # Count number of companies per country\n  summarise(count = n(),\n  # Calculate total revenue per country\n            revenue_omu = sum(revenue_omu)) %>%\n  ungroup()\n\n\n# Create separate plots for each type\np_company <- nodes_agg %>%\n  # Only plot countries with more than 100 companies\n  filter(type == \"Company\" &\n           count > 100) %>%\n  ggplot(\n  # Arrange in Descending order of count\n    aes(x = fct_rev(fct_reorder(country, count)),\n        y = count)\n  ) +\n  geom_col() +\n  # Set to prevent trunctation when patched\n  ylim(0,3800) +\n  geom_text(\n    aes(label = count),\n    vjust = -1\n  ) +  #< Set count annotations above bar\n  labs(\n    title = \"Most Number of Companies Operating from ZH\"\n  ) +\n  theme_fivethirtyeight()+\n  theme(\n    axis.title.y = element_blank(),\n    axis.title.x = element_blank(),\n    axis.text.y = element_blank(),\n    panel.background = element_rect(fill=\"#dfdfeb\",colour=\"#dfdfeb\"),\n    plot.background = element_rect(fill=\"#dfdfeb\",colour=\"#dfdfeb\")\n  )\n\n# Plot for company contacts\np_contact <- nodes_agg %>%\n  # Only plot countries with more than 100 companies\n  filter(type == \"Company Contacts\") %>%\n  ggplot(\n  # Arrange in Descending order of count\n    aes(x = fct_rev(fct_reorder(country, count)),\n        y = count)\n  ) +\n  geom_col() +\n  geom_text(\n    aes(label = count),\n    vjust = -1\n  ) + \n  ylim(0,10000) +\n  labs(\n    title = \"Company Contacts\"\n  ) +\n  theme_fivethirtyeight()+\n  theme(\n    axis.title.y = element_blank(),\n    axis.title.x = element_blank(),\n    axis.text.y = element_blank(),\n    panel.background = element_rect(fill=\"#dfdfeb\",colour=\"#dfdfeb\"),\n    plot.background = element_rect(fill=\"#dfdfeb\",colour=\"#dfdfeb\")\n  )\n\n# Plot for beneficial owners\np_owner <- nodes_agg %>%\n  # Only plot countries with more than 100 companies\n  filter(type == \"Beneficial Owner\") %>%\n  ggplot(\n  # Arrange in Descending order of count\n    aes(x = fct_rev(fct_reorder(country, count)),\n        y = count)\n  ) +\n  geom_col() +\n  geom_text(\n    aes(label = count),\n    vjust = -1\n  ) +\n  ylim(0,13000) +\n  labs(\n    title = \"Beneficial Owners\"\n  ) +\n  theme_fivethirtyeight()+\n  theme(\n    axis.title.y = element_blank(),\n    axis.title.x = element_blank(),\n    axis.text.y = element_blank(),\n    panel.background = element_rect(fill=\"#dfdfeb\",colour=\"#dfdfeb\"),\n    plot.background = element_rect(fill=\"#dfdfeb\",colour=\"#dfdfeb\")\n  )\n\nbottompatch <- (p_contact + p_owner) +\n  plot_annotation(title = \"Almost all Company Contacts & Beneficial Owners from ZH\")\n\nfullpatch <- p_company / bottompatch\nfullpatch & theme(plot.background = element_rect(fill=\"#dfdfeb\",colour=\"#dfdfeb\"))"
  },
  {
    "objectID": "fishy_business.html#are-there-entities-with-transboundary-operations",
    "href": "fishy_business.html#are-there-entities-with-transboundary-operations",
    "title": "Fishy Business",
    "section": "3.4 Are there Entities with Transboundary Operations?",
    "text": "3.4 Are there Entities with Transboundary Operations?\nThe fishing industry is a transboundary operation, and vessels or companies that operate between different jurisdictions may often evade law enforcement authorities. Companies with multiple entries and listed countries could be related to fishy activity. These are filtered and visualised:\n\n\nCode\nnodes_count_country <- mc3_nodes_new %>%\n  group_by(id, country) %>%\n  summarise(roles = n()) %>%\n  ungroup %>%\n  group_by(id) %>%\n  summarise(country_count = n(),\n            roles = sum(roles)) %>%\n  ungroup() %>%\n  arrange(desc(country_count))\n\nkable(head(nodes_count_country, 10)) %>%\n  kable_styling(bootstrap_options = c(\"striped\", \"hover\", \"condensed\", \"responsive\"))\n\n\n\n\n \n  \n    id \n    country_count \n    roles \n  \n \n\n  \n    Aqua Aura SE Marine life \n    9 \n    9 \n  \n  \n    Tamil Nadu s A/S \n    4 \n    4 \n  \n  \n    Transit Limited Liability Company \n    4 \n    4 \n  \n  \n    Bahía del Sol Corporation \n    3 \n    3 \n  \n  \n    Bay of Bengal's Ltd. Liability Co \n    3 \n    3 \n  \n  \n    Diao yu  BV Logistics \n    3 \n    3 \n  \n  \n    Diao yu bi sai  BV \n    3 \n    3 \n  \n  \n    Jammu S.A. de C.V. \n    3 \n    3 \n  \n  \n    Manipur  Market Ltd. Liability Co \n    3 \n    3 \n  \n  \n    Mar de Coral ОАО \n    3 \n    3 \n  \n\n\n\n\n\n\nTransboundary Operations:\n\nFrom the data presented above, it seems as though there are multiple Entities operating across country borders.\n\nThe number of countries listed match the count of roles, which suggests that these entities may be involved in multiple sub-network clusters within the overall network.\n\nCompanies with the highest count, Aqua Aura SE Marine life, Tamil Nadu s A/S & Transit Limited Liability Company may need to be investigated further, as their transboundary operations may reveal fishy connections."
  },
  {
    "objectID": "fishy_business.html#how-much-revenue-is-being-reported-by-the-companies",
    "href": "fishy_business.html#how-much-revenue-is-being-reported-by-the-companies",
    "title": "Fishy Business",
    "section": "3.5 How Much Revenue is Being Reported by the Companies?",
    "text": "3.5 How Much Revenue is Being Reported by the Companies?\n\n\nCode\n# Only feature data from Companies\ncompany_nodes <- mc3_nodes_new %>%\n  filter(type == \"Company\")\n\ncompany_rev <-\n  ggplot(company_nodes, \n       aes(x = 1, \n           y = revenue_omu)\n  ) +\n  geom_rain(\n    color = \"grey20\",\n    alpha = .5\n  ) +\n  scale_y_continuous(\n    breaks = scales::pretty_breaks(n=5),\n    labels = scales::dollar\n  ) +\n  labs(\n    title = \"Skewed Distribution of Revenue\\nSuggests Range of Company Sizes\"\n  ) +\n  theme_fivethirtyeight()+\n  theme(\n    axis.ticks.y = element_blank(),\n    axis.title = element_blank(),\n    axis.text.y = element_blank(),\n    panel.background = element_rect(fill=\"#dfdfeb\",colour=\"#dfdfeb\"),\n    plot.background = element_rect(fill=\"#dfdfeb\",colour=\"#dfdfeb\")\n  ) +\n  coord_flip()\n\ncompany_rev\n\n\n\n\n\n\nDistribution of revenue as well as quantile values show a highly right-skewed distribution, which could be an indication of company size. To use this variable for further classification of anomalous groups, revenue is binned by percentile and assigned a label. As missing Revenue values could be a data lapse issue, or a sign of concealing possible fishy actvity, which is kept as a separate category for further analysis:\n\nAbove 80th Percentile: 1\n60-80th Percentile: 2\n40-60th Percentile: 3\n20-40th Percentile: 4\nBelow 20th Percentile: 5\nMissing Values : NA\n\n\n\n\nCode\n# Calculate the percentiles\npercentiles <- quantile(mc3_nodes_new$revenue_omu, \n                        probs = c(0, 0.2, 0.4, 0.6, 0.8, 1),\n                        na.rm = TRUE)\n\n# Create a new column and assign labels based on percentiles\nmc3_nodes_new$revenue_group <- cut(mc3_nodes_new$revenue_omu, \n                                   breaks = percentiles, \n                                   labels = c(5, 4, 3, 2, 1), \n                                   include.lowest = TRUE)\n\n# Barchart of revenue group\nggplot(\n  mc3_nodes_new, \n  aes(x = revenue_group)\n  ) +\n  geom_bar() +\n  labs(\n    # Linebreak added to title so it does not get truncated\n    title = \"Highest Count of Missing Revenue Reports\\nfrom Beneficial Owners\", \n    x = \"Revenue Group\",\n    y = NULL\n  ) +\n  geom_text(\n    stat = \"count\",\n    aes(label = after_stat(count)),\n    vjust = -1\n  ) +\n  ylim(0,11000) +\n  theme_fivethirtyeight()+\n  theme(\n    text = element_text(size = 12),\n    panel.background = element_rect(fill=\"#dfdfeb\",colour=\"#dfdfeb\"),\n    plot.background = element_rect(fill=\"#dfdfeb\",colour=\"#dfdfeb\")\n  ) +\n  facet_wrap(~type)\n\n\n\n\n\n\n3.5.1 Average Revenue of Companies by Country\n\n\nCode\ncountry_rev <- mc3_nodes_new %>%\n  group_by(country) %>%\n  summarise(companies = n(),\n            avg_revenue = sum(revenue_omu, na.rm = TRUE)/companies) %>%\n  ungroup()\n\nggplot(country_rev, \n       aes(area = avg_revenue/1000, fill = avg_revenue, label = country)\n  ) +\n  geom_treemap() +\n  geom_treemap_text(\n    aes(label = paste(country, companies, sep = \"\\n\")),\n    colour = \"#dfdfeb\",\n    place = \"centre\",\n    size = 12\n  ) +\n  scale_fill_continuous(\n    name = \"Average Revenue\",\n    labels = scales::dollar_format(),\n    low = \"#D86171\",\n    high = \"#4d5887\"\n  ) +\n  labs(\n    title = \"Average Revenue by Country with Company Count\"\n  ) +\n  theme_fivethirtyeight()+\n  theme(\n    # Change Legend Position to the right\n    legend.position = \"right\",\n    legend.direction = \"vertical\",\n    legend.background = element_rect(fill=\"#dfdfeb\",colour=\"#dfdfeb\"),\n    panel.background = element_rect(fill=\"#dfdfeb\",colour=\"#dfdfeb\"),\n    plot.background = element_rect(fill=\"#dfdfeb\",colour=\"#dfdfeb\")\n  )\n\n\n\n\n\n.\n\nZH has highest number of companies but lower average revenue\n\nThe treemap of revenue by country reveals that Alverovia has only a single listed company but highest average recorded revenue: OceanFront Foods SRL Line\nThere are also several other Countries with fewer listed companies such as Rosvandor, Azurionix and Osterivaria that recorded higher average revenue than the country with most listed companies, ZH.\n\n\nInterestingly, companies from these countries with higher average revenue but fewer companies listed mostly offer products and services unrelated to fishing. This suggests that both fishing-related and non-fishing related companies need to be examined further – and that there may be fishy connections between companies from different industries that may cover up IUU activities.\n\n\nCode\nhighrev_companies <- mc3_nodes_new %>%\n  filter(country %in% c(\"Alverovia\", \"Rosvandor\", \"Rio Isla\", \"Azurionix\", \"Osterivaria\"),\n         revenue_group == \"1\") %>%\n  select(id, country, revenue_group, product_services) %>%\n  arrange(country)\n\ndatatable(highrev_companies)"
  },
  {
    "objectID": "fishy_business.html#grouping-by-industry",
    "href": "fishy_business.html#grouping-by-industry",
    "title": "Fishy Business",
    "section": "4.1 Grouping by Industry",
    "text": "4.1 Grouping by Industry\nAs mentioned in the section above, analysis showed that higher average revenue has a strong relation to non-fishing related companies. Summary statistics also revealed that the product_services variable has a large range of characters, that makes it difficult to classify the companies into industries for comparison. Text mining in the form of Tokenisation, as well as Topic Modeling (an unsupervised learning method) were used to deconstruct the text present in product_services to form more meaningful categories.\n\n4.1.1 Data Preparation: Tokenisation\n\n# Replace all 'character(0)' values as unknown\nmc3_nodes_new$product_services[mc3_nodes_new$product_services == \"character(0)\"] <- \"Unknown\"\n\n# Create new dataframe with words split into separate rows\nnodes_unnest <- mc3_nodes_new %>%\n  filter(type == \"Company\") %>%\n  # Create new column 'word' to store split words\n  unnest_tokens(word, \n                product_services,\n    # Change all words to lowercase for more accurate tokenisation\n                to_lower = TRUE,\n    # Remove punctuation to exclude from tokenisation\n                strip_punct = TRUE)\n\n\nI: Extract the TextII: Clean the Text DataIII: Create document-term-matrix (DTM) to count word frequency\n\n\n\n# Create a vector containing only the text\nnodes_text <- nodes_unnest$word \n\n# Create a corpus\ntext <- Corpus(VectorSource(nodes_text))\n\n\n\nThe process of removing specific stopwords using removeWords is an iterative process, where higher frequency words are removed if deemed out of context (such as ‘well’, ‘including’, ‘related’ or unproductive in giving specific information about the nature of businesses (such as ‘source’, ‘materials’, etc).\n\ntext <- text %>%\n  # Remove any whitespace\n  tm_map(stripWhitespace) %>%\n  # remove stopwords\n  tm_map(removeWords, stopwords(kind = \"en\")) %>%\n  # Specity stopwords based on initial analysis of word frequency\n  tm_map(removeWords, c(\"products\", \"including\", \"well\", \"related\", \"services\", \"source\", \"materials\", \"goods\", \"offers\", \"range\"))\n\n\n\n\n\nCode\n# Generate a document-term-matrix\ndtm <- TermDocumentMatrix(text) \nmatrix <- as.matrix(dtm) \n# Sort matrix according to frequency\nwords <- sort(rowSums(matrix),decreasing = TRUE) \n# Count frequency of each word and save as new column in dataframe\ntext_df <- data.frame(word = names(words),freq = words)\n\ndatatable(head(text_df,15))\n\n\n\n\n\n\n\nThe table output shows that “Unknown” products and services are the most frequently listed. While this could possibly point to fishy business relationships, these records may also be masking other anomalies present. A separate text dataframe is created without “unknown” products and services:\n\n\nCode\ntext_df_known <- text_df[-1,]\n\n\n\n\n\n\n\nCode\nwordcloud2(text_df_known, \n           color = \"random-dark\", \n           backgroundColor = \"#F8F3E6\")\n\n\n\n\n\n\n\n.\n\nThe wordcloud reveals that fishing-related products seem to appear the most frequently. However, there are several words that appear frequently enough to take note of:\n\nequipment\nindustrial\ntransportation\nfreelance\nresearcher\n\nfreelance researcher was found to be listed as the source of information for products and services. This was thus not an accurate representation of industry category. As the use of just singular words may be taken out of context, especially from phrases used in longer descriptions, further analysis was conducted for pairs of words (bigrams)\n\n\n\n4.1.2 Plotting Bigram of Frequent Products and Services\n\nI: Unnesting tokens as BigramsII: Creating LinksIII: Creating Graph Object\n\n\n\nnodes_unnest2 <- mc3_nodes %>%\n  filter(type == \"Company\") %>%\n   unnest_tokens(bigram, \n                 product_services, \n                 token = \"ngrams\", \n                 n = 2, \n                 to_lower = TRUE,) %>%\n  # remove empty rows\n  filter(!is.na(bigram)) %>%\n  # Remove specific stopwords from bigrams\n  filter(!str_detect(bigram,\"including|range|related|freelance\")) %>%\n  select(id, bigram)\n\n\n\n\nproduct_bigram <- nodes_unnest2 %>%\n    count(bigram, sort = TRUE) %>%\n  # Split bigram words into separate columns, uding space as delimiter\n    separate(bigram, c(\"word1\", \"word2\"), sep = \" \") %>%\n  # Only match words not in stopwords\n    anti_join(stop_words, by = c(\"word1\" = \"word\")) %>%\n    anti_join(stop_words, by = c(\"word2\" = \"word\")) %>%\n  # Keep only characters, dropping numbers \n    filter(str_detect(word1, \"[a-z]\") & str_detect(word2, \"[a-z]\"))\n\n\n\nApplying a filter to keep only most frequently related bigrams\n\nproduct_bigram_graph <- product_bigram %>%\n  filter(n >15) %>%\n  graph_from_data_frame()\n\n\n\n\n\n\nCode\nset.seed(1234)\nggraph(\n  product_bigram_graph, \n  layout = \"nicely\"\n  ) +\n  geom_edge_link(\n    # Adjust transparency of link based on how common the bigram is\n    aes(edge_alpha = n),\n    arrow = grid::arrow(type = \"closed\", \n                        length = unit(.2, \"cm\")),\n    # Leave a gap between arrow head and circle\n    end_cap = circle(.2, 'cm'),\n    show.legend = FALSE\n  ) +\n  geom_node_point(\n    alpha = .7,\n    size = 3) +\n  geom_node_text(\n    aes(label = name), \n    repel = TRUE\n  ) +\n  labs(title = \"High Frequency of Companies Dealing in Seafood Products\",\n       subtitle = \"Darker links indicate higher commonality of related terms\"\n  ) +\n  theme_fivethirtyeight()+\n  theme(\n    axis.ticks = element_blank(),\n    axis.text = element_blank(),\n    panel.grid = element_blank(),\n    panel.background = element_rect(fill=\"#dfdfeb\",colour=\"#dfdfeb\"),\n    plot.background = element_rect(fill=\"#dfdfeb\",colour=\"#dfdfeb\")\n  )\n\n\n\n\n\n\n\n4.1.3 Classifying Companies into Industries\nTopic Modeling is an unsupervised machine learning method suitable for data exploration. In particular, Latent Dirichlet Allocation (LDA) is useful for ‘clustering’ text into groups of similar meanings. Similar to k-means Clustering algorithms, the number of topics (or ‘clusters’) k is the most important parameter to define. In the event that k is too small, the topics may be over-generalised; if k is too large, however, topics may be overlapping or not useful for interpretation. To determine the optimal number of topics k, the FindTopicsNumber plot is used to compare models for different values of k.\n\nI: Create DTM from text dataframeII: Create models with different k valuesIII: Plot Results to Find Optimum kIV: Compute the LDA Model\n\n\n\nnodes_unnest_filtered <- nodes_unnest %>%\n  filter(!word %in% c(\"products\", \"including\", \"well\", \"related\", \"services\", \"source\", \"materials\", \"goods\", \"offers\", \"range\", \"unknown\", \"freelance\")) %>% \n  anti_join(stop_words)\n\n\ndtm2 <- nodes_unnest_filtered %>%\n  count(id, word) %>% \n  cast_dtm(id, word, n) %>%  \n  as.matrix()\n\n\n\n\nresult <- ldatuning::FindTopicsNumber(\n  dtm2,\n  topics = seq(from = 2, to = 20, by = 1),\n  metrics = c(\"Griffiths2004\", \"CaoJuan2009\", \"Arun2010\", \"Deveaud2014\"),\n  method = \"Gibbs\",\n  control = list(seed = 123),\n  verbose = TRUE\n)\n\nfit models... done.\ncalculate metrics:\n  Griffiths2004... done.\n  CaoJuan2009... done.\n  Arun2010... done.\n  Deveaud2014... done.\n\n\n\n\n\n\nCode\nFindTopicsNumber_plot(result)\n\n\n\n\n\nFrom the plot above, Maximising Griffiths2004 and Deveaud2014 and Minimizing CaoJuan2009 and Arun2010 scores show that k = 6 topics seems to be optimal.\n\n\n\n# set random number generator seed\nset.seed(1234)\n\n# compute the LDA model\nlda_topics <- LDA(dtm2, 6, \n                  method=\"Gibbs\", \n                  control=list(iter = 500, verbose = 25)) %>% \n  # Extract estimated topic-term probabilities (beta) matrix from LDA results\n  tidy(matrix = \"beta\")\n\nK = 6; V = 7719; M = 3870\nSampling 500 iterations!\nIteration 25 ...\nIteration 50 ...\nIteration 75 ...\nIteration 100 ...\nIteration 125 ...\nIteration 150 ...\nIteration 175 ...\nIteration 200 ...\nIteration 225 ...\nIteration 250 ...\nIteration 275 ...\nIteration 300 ...\nIteration 325 ...\nIteration 350 ...\nIteration 375 ...\nIteration 400 ...\nIteration 425 ...\nIteration 450 ...\nIteration 475 ...\nIteration 500 ...\nGibbs sampling completed!\n\n\n\n\n\n\n\nCode\n# get most representative words by topic by higher probability\ntopic_text <- lda_topics %>%\n  group_by(topic) %>%\n  top_n(15, beta) %>%\n  ungroup() \n\n# Plot in descending order\nggplot(\n  topic_text,\n  aes(x = fct_reorder(term, beta), \n      y = beta, \n      fill = as.factor(topic))\n  ) +\n  geom_col(show.legend = FALSE) +\n  facet_wrap(~ topic, scales = \"free\") +\n  coord_flip() +\n  labs(\n    title = \"6 Different Industries Derived from LDA\"\n  ) +\n  theme_fivethirtyeight()+\n  theme(\n    axis.ticks = element_blank(),\n    panel.grid = element_blank(),\n    panel.background = element_rect(fill=\"#dfdfeb\",colour=\"#dfdfeb\"),\n    plot.background = element_rect(fill=\"#dfdfeb\",colour=\"#dfdfeb\")\n  )\n\n\n\n\n\nThe companies can be classified under these 6 Industries:\n\n\n\n\n\n\n\n\nTopic.\nIndustry\nDescription\n\n\n\n\n1\nIndustrial\nManages equipment, machinery and other industrial materials\n\n\n2\nFood\nVegetables, meat, fruits and other groceries\n\n\n3\nSeafood-processing\nPackaging, canning, manufacturing of marine or seafood products\n\n\n4\nConsumer-goods\nNon-fishing related accessories, furniture, apparel\n\n\n5\nTransport-logistics\nCompanies specialising in logistics, freight, cargo services\n\n\n6\nFishing\nCompanies directly related to fishing of salmon, tuna, etc\n\n\n\n\nComputing gamma matrix to get topic assignment per companyAssigning labels to TopicsAssigning each Company id an Industry\n\n\n\nset.seed(1234)\n\n# compute the LDA model\nlda_topics2 <- LDA(dtm2, 6, \n                  method = \"Gibbs\", \n                  control=list(iter = 500, verbose = 25)) %>% \n  # Assign probabilities to each company id \n  tidy(matrix = \"gamma\")\n\nK = 6; V = 7719; M = 3870\nSampling 500 iterations!\nIteration 25 ...\nIteration 50 ...\nIteration 75 ...\nIteration 100 ...\nIteration 125 ...\nIteration 150 ...\nIteration 175 ...\nIteration 200 ...\nIteration 225 ...\nIteration 250 ...\nIteration 275 ...\nIteration 300 ...\nIteration 325 ...\nIteration 350 ...\nIteration 375 ...\nIteration 400 ...\nIteration 425 ...\nIteration 450 ...\nIteration 475 ...\nIteration 500 ...\nGibbs sampling completed!\n\n\n\n\n\n# Assign topic with the highest gamma score to the document/company\ncp_map <-lda_topics2 %>% \n  group_by(document) %>% \n  summarise(gamma = max(gamma)) \n\n# Rename topic numbers to categories\ncp_map <- cp_map %>% \n  left_join(lda_topics2) %>% \n  mutate(topic = recode(topic, \"1\" =\"Industrial Company\",\n                      \"2\" =\"Food Company\",\n                      \"3\" =\"Seafood-processing Company\",\n                      \"4\" =\"Consumer-goods Company\",\n                      \"5\" =\"Transport-logistics Company\",\n                      \"6\" = \"Fishing-related Company\")) %>%\n  rename(\"Industry\"=\"topic\",\n         \"id\" = \"document\") %>% \n  select(id, Industry)\n\n\n\n\n# Look for companies assigned more than a single industry\ncp_map_count <- cp_map %>%\n  group_by(id) %>%\n  summarise(count = n()) %>%\n  # Get id of companies in more than a single industry\n  filter(count >1) %>%\n  ungroup()\n\n# Assign new label to ids with multiple rows \ncp_map$Industry <- ifelse(cp_map$id %in% cp_map_count$id, \"Multi-Industry Company\", cp_map$Industry)\n\n# remove duplicates\ncp_map <- distinct(cp_map)\n\n# Use left join to join back to company revenue info\nfinal_nodes <- nodes_pivot %>%\n  left_join(cp_map, by = \"id\") %>%\n  rename(\"group\" = \"Industry\")\n\n# Aggregate mc3_nodes to get revenue group\nmc3_nodes_agg <- mc3_nodes_new %>%\n  group_by(id) %>%\n  summarise(country_count = n(),\n            revenue_group = max(as.numeric(revenue_group))) %>%\n  select(id, country_count, revenue_group) %>%\n  ungroup()\n\n# Use join to append country_count and revenue_group to final nodes data\nfinal_nodes <- final_nodes %>% \n  left_join(mc3_nodes_agg, by = \"id\")\n\n\n\n\n\n\nCode\nggplot(cp_map,\n    aes(x = Industry)\n  ) +\n  geom_bar() +\n # Set count annotations above bar\n  geom_text(\n    stat = \"count\",\n    aes(label = after_stat(count)),\n    vjust = -1\n  ) +  \n # Ensure than annotations are not cut off\n  ylim(0, 900) +\n  labs(\n    title = \"Fairly even Distribution of Companies Across Industries \"\n  ) +\n  theme_fivethirtyeight()+\n  theme(\n    axis.text.y = element_blank(),\n    axis.title.y = element_blank(),\n    axis.title.x = element_blank(),\n    # Rotate labels to prevent overlapping\n    axis.text.x = element_text(angle = 60, hjust = 1),\n    panel.background = element_rect(fill=\"#dfdfeb\",colour=\"#dfdfeb\"),\n    plot.background = element_rect(fill=\"#dfdfeb\",colour=\"#dfdfeb\")\n  )"
  },
  {
    "objectID": "fishy_business.html#grouping-by-company-structure-network",
    "href": "fishy_business.html#grouping-by-company-structure-network",
    "title": "Fishy Business",
    "section": "4.2 Grouping by Company Structure & Network",
    "text": "4.2 Grouping by Company Structure & Network\nBesides looking at industry-based groupings – which are limited to Companies – there is an avenue to explore the relationship between different variables to sieve out anomalous groups within the overall network:\n\n\n\n\n%%{\n  init: {\n    \"theme\": \"base\",\n    \"themeVariables\": {\n      \"primaryColor\": \"#d8e8e6\",\n      \"primaryTextColor\": \"#325985\",\n      \"primaryBorderColor\": \"#325985\",\n      \"lineColor\": \"#325985\",\n      \"secondaryColor\": \"#cedded\",\n      \"tertiaryColor\": \"#fff\" \n      }\n  }\n}%%\n\nflowchart LR\n    A{Overall\\nNetwork} --> B{Fishy\\nCompanies}\n    B --> C(Company Structure)\n    B --> D(Financial Status) -.->E[High Revenue]\n    D -.-> F[Unreported Revenue]\n    C -.->|Overlapping?|G[Beneficial Owners]\n    C -.->|Overlapping?|H[Company Contacts]\n    B --> I(Transboundary\\nOperations)\n\n\n\n\n\n\n\n\n\nIn a report published by Trygg Mat Tracking (TMT), an international not-for-profit organisation that investigates illegal fishing operations and associated crimes, many fishy operators use Shell Companies, Front companies and joint ventures to cover up illegal operations with complex company structures so as to conceal the Ultimate Beneficial Ownership (UBO). (2020)\nRevealing the company ownership and company contact structure through network graph visualisations of different groups could help uncover hidden patterns and owners in the network. This will give a better sense of how the individual records listed in the links data are related, as well as sieve out possible fishy patterns.\n\nThe following filters are used to investigate possible ‘groups’ and anomalies:\n\nHigh Revenue & Companies with Higher numbers of Beneficial Owners\nBeneficial Owners of higher number of Companies\nCompany Contacts of higher number of Companies\nCompanies with Transboundary Operations"
  },
  {
    "objectID": "fishy_business.html#companies-with-high-revenue-high-number-of-beneficial-owners",
    "href": "fishy_business.html#companies-with-high-revenue-high-number-of-beneficial-owners",
    "title": "Fishy Business",
    "section": "4.3 Companies with High Revenue & High Number of Beneficial Owners",
    "text": "4.3 Companies with High Revenue & High Number of Beneficial Owners\n\nIIIIII\n\n\nExtracting Nodes and Links\n\n# Extract nodes from Highest revenue band\nnodes_highrev <- mc3_nodes_new %>%\n  filter(revenue_group == \"1\")\n\n# Only get Beneficial Owners from companies with higher counts\nhigh_owner_count <- links_count %>%\n  filter(type == \"Beneficial Owner\") %>%\n  filter(count >10)\n\nlinks_highrev <- mc3_links_new %>%\n  filter(type == \"Beneficial Owner\") %>%\n  filter(source %in% high_owner_count$source) %>%\n  filter(source %in% nodes_highrev$id) %>%\n  rename(\"from\" = \"source\",\n         \"to\" = \"target\")\n\n\n\nGet Distinct Source and Target\n\n# Get distinct Source and Target\nhirev_source <- links_highrev %>%\n  distinct(from) %>%\n  rename(\"id\" = \"from\")\n\nhirev_target <- links_highrev %>%\n  distinct(to) %>%\n  rename(\"id\" = \"to\")\n\n\n\nCreating Nodes and Edges Dataframes\n\n# Bind into single dataframe\nnodes_hirev_new <- bind_rows(hirev_source, hirev_target)\n\nnodes_hirev_new$group <- ifelse(nodes_hirev_new$id %in% links_highrev$to,\"Beneficial Owner\", \"Company\")\n\n\n\n\n\n\nCode\nvisNetwork(\n    nodes_hirev_new, \n    links_highrev,\n    width = \"100%\",\n    main = list(text = \"Fishy Companies with completely overlapping Beneficial Owners:\",\n                style = \"font-size:17x;\n                weight:bold;\n                text-align:right;\")\n  ) %>%\n  visIgraphLayout(\n    layout = \"layout_nicely\"\n  ) %>%\n  visGroups(groupname = \"Company\",\n            shape = \"icon\",\n            icon = list(code = \"f0b1\",\n                        color = \"#4d5887\")) %>%\n  visGroups(groupname = \"Beneficial Owner\",\n            shape = \"icon\",\n            icon = list(code = \"f2bd\",\n                        size = 45,\n                        color = \"#7fcdbb\")) %>%\n  visLegend() %>%\n  visEdges() %>%\n  addFontAwesome() %>%\n  visOptions(\n  # Specify additional Interactive Elements\n    highlightNearest = list(enabled = T, degree = 2, hover = T),\n  # Add drop-down menu to filter by company name\n    nodesIdSelection = TRUE,\n  # Add drop-down menu to filter by category\n    selectedBy = \"group\",\n    collapse = TRUE) %>%\n  visInteraction(navigationButtons = TRUE)\n\n\n\n\n\n\n.\n\nOverlapping Beneficial Owners:\n\nDrakensberg Limited Liability Company & Haryana S Catchers OAO Enterprises\nshi ren yu Barge & Isla del Este Ltd"
  },
  {
    "objectID": "fishy_business.html#beneficial-owners-of-3-or-more-companies",
    "href": "fishy_business.html#beneficial-owners-of-3-or-more-companies",
    "title": "Fishy Business",
    "section": "4.4 Beneficial Owners of 3 or More Companies",
    "text": "4.4 Beneficial Owners of 3 or More Companies\nThe output above revealed some fishy overlaps in ownership, that could point towards the use of shell/front companies in order to mask true activities. These Individuals are filtered out and visualised:\n\nIIIIII\n\n\nExtracting Nodes and Links\n\n# Only get individuals who are beneficial owners of more than or equal to 3 companies\nowner_count <- links_pivot %>%\n  filter(`Beneficial Owner` >= 3) %>%\n  distinct()\n\nlinks_owner <- mc3_links_new %>%\n  filter(type == \"Beneficial Owner\") %>%\n  filter(target %in% owner_count$target) %>%\n  rename(\"from\" = \"source\",\n         \"to\" = \"target\")\n\n\n\nGet Distinct Source and Target\n\n# Get distinct Source and Target\nowner_source <- links_owner %>%\n  distinct(from) %>%\n  rename(\"id\" = \"from\")\n\nowner_target <- links_owner %>%\n  distinct(to) %>%\n  rename(\"id\" = \"to\")\n\n\n\nCreating Nodes and Edges Dataframes\n\n# Bind into single dataframe\nowner_nodes <- bind_rows(owner_source, owner_target) %>%\n  distinct()\n\nowner_nodes$group <- ifelse(owner_nodes$id %in% owner_count$target, \"Beneficial Owner\", \"Company\")\n\n\n\n\n\n\nCode\nvisNetwork(\n    owner_nodes, \n    links_owner,\n    width = \"100%\",\n    main = list(text = \"Presence of Overlapping and Joint Ownership Structures\",\n                style = \"font-size:17x;\n                weight:bold;\n                text-align:right;\")\n  ) %>%\n  visIgraphLayout(\n    layout = \"layout_with_fr\"\n  ) %>%\n  visGroups(groupname = \"Company\",\n            shape = \"icon\",\n            icon = list(code = \"f0b1\",\n                        color = \"#4d5887\")) %>%\n  visGroups(groupname = \"Beneficial Owner\",\n            shape = \"icon\",\n            icon = list(code = \"f2bd\",\n                        size = 45,\n                        color = \"#7fcdbb\")) %>%\n  visLegend() %>%\n  visEdges() %>%\n  addFontAwesome() %>%\n  visOptions(\n  # Specify additional Interactive Elements\n    highlightNearest = list(enabled = T, degree = 2, hover = T),\n  # Add drop-down menu to filter by company name\n    nodesIdSelection = TRUE,\n  # Add drop-down menu to filter by category\n    selectedBy = \"group\",\n    collapse = TRUE) %>%\n  visInteraction(navigationButtons = TRUE)"
  },
  {
    "objectID": "fishy_business.html#company-contacts-of-3-or-more-companies",
    "href": "fishy_business.html#company-contacts-of-3-or-more-companies",
    "title": "Fishy Business",
    "section": "4.5 Company Contacts of 3 or more Companies",
    "text": "4.5 Company Contacts of 3 or more Companies\nAnalysis in the previous sections also showed that there were entities listed as Company Contacts of multiple companies. From the fishy patterns highlighted in the above network with Beneficial Ownership, the structure for Company Contacts was visualised for further analysis:\n\nIIIIII\n\n\nExtracting Nodes and Links\n\n# Only get individuals who are beneficial owners of more than or equal to 3 companies\ncc_count <- links_pivot %>%\n  filter(`Company Contacts` >= 3) %>%\n  distinct()\n\nlinks_cc <- mc3_links_new %>%\n  filter(type == \"Company Contacts\") %>%\n  filter(target %in% cc_count$target) %>%\n  rename(\"from\" = \"source\",\n         \"to\" = \"target\")\n\n\n\nGet Distinct Source and Target\n\n# Get distinct Source and Target\ncc_source <- links_cc %>%\n  distinct(from) %>%\n  rename(\"id\" = \"from\")\n\ncc_target <- links_cc %>%\n  distinct(to) %>%\n  rename(\"id\" = \"to\")\n\n\n\nCreating Nodes and Edges Dataframes\n\n# Bind into single dataframe\ncc_nodes <- bind_rows(cc_source, cc_target) %>%\n  distinct()\n\ncc_nodes$group <- ifelse(cc_nodes$id %in% cc_count$target, \"Company Contacts\", \"Company\")\n\n\n\n\n\n\nCode\nvisNetwork(\n    cc_nodes, \n    links_cc,\n    width = \"100%\",\n    main = list(text = \"Overlapping Company Contacts Suggest Connected Clusters\",\n                style = \"font-size:17x;\n                weight:bold;\n                text-align:right;\")\n  ) %>%\n  visIgraphLayout(\n    layout = \"layout_with_fr\"\n  ) %>%\n  visGroups(groupname = \"Company\",\n            shape = \"icon\",\n            icon = list(code = \"f0b1\",\n                        color = \"#4d5887\")) %>%\n  visGroups(groupname = \"Company Contacts\",\n            shape = \"icon\",\n            icon = list(code = \"f2bb\",\n                        size = 45,\n                        color = \"#D86171\")) %>%\n  visLegend() %>%\n  visEdges() %>%\n  addFontAwesome() %>%\n  visOptions(\n  # Specify additional Interactive Elements\n    highlightNearest = list(enabled = T, degree = 2, hover = T),\n  # Add drop-down menu to filter by company name\n    nodesIdSelection = TRUE,\n  # Add drop-down menu to filter by category\n    selectedBy = \"group\",\n    collapse = TRUE) %>%\n  visInteraction(navigationButtons = TRUE)"
  },
  {
    "objectID": "fishy_business.html#companies-with-transboundary-operations",
    "href": "fishy_business.html#companies-with-transboundary-operations",
    "title": "Fishy Business",
    "section": "4.6 Companies with Transboundary Operations",
    "text": "4.6 Companies with Transboundary Operations\nCountries Operating in 2 or more countries are filtered out and visualised:\n\nIIIIII\n\n\nExtracting Nodes and Links\n\n# Create a filter dataframe to get companies operating across 2 or more countries\nnodes_country <- nodes_count_country %>%\n  filter(country_count >=2)\n\ntrans_nodes <- mc3_nodes_new %>%\n  filter(id %in% nodes_country$id)\n\ntrans_links <- mc3_links_new %>%\n  filter(source %in% trans_nodes$id) %>%\n  rename(\"from\" = \"source\",\n         \"to\" = \"target\")\n\n\n\nGet Distinct Source and Target\n\n# Get distinct Source and Target\ntrans_source <- trans_links %>%\n  distinct(from) %>%\n  rename(\"id\" = \"from\")\n\ntrans_target <- trans_links %>%\n  distinct(to) %>%\n  rename(\"id\" = \"to\")\n\n\n\nCreating Nodes and Edges Dataframes\n\n# Bind into single dataframe\ntrans_nodes_new <- bind_rows(trans_source, trans_target) %>% distinct()\n\n# Get country count for each company node\ntrans_nodes_new <- trans_nodes_new %>%\n  left_join(nodes_country, by= \"id\") %>%\n  rename(\"value\" = \"country_count\") %>%\n# Assign value to number of countries each company is operating in\n  mutate(value = ifelse(is.na(value), 1, value*5)) %>%\n  select(id, value)\n\n# Create Company Contacts filter from Links\ncc_all_links <- mc3_links_new %>%\n  filter(type == \"Company Contacts\") %>%\n  select(target, type)\n\ntrans_nodes_new$group <- ifelse(trans_nodes_new$id %in% nodes_country$id, \"Company\",\n                              ifelse(trans_nodes_new$id %in% cc_all_links$target, \"Company Contacts\", \"Beneficial Owner\" ))\n\n\n\n\n\n\nCode\nvisNetwork(\n    trans_nodes_new, \n    trans_links,\n    width = \"100%\",\n    main = list(text = \"Companies Operating Across Borders\",\n                style = \"font-size:17x;\n                weight:bold;\n                text-align:right;\"),\n    submain = list(text = \"Node size represents Country Count\",\n                style = \"font-size:12x;\n                text-align:right;\")\n  ) %>%\n  visIgraphLayout(\n    layout = \"layout_with_fr\"\n  ) %>%\n  visGroups(groupname = \"Company\",\n             color = \"#4d5887\") %>%\n  visGroups(groupname = \"Company Contacts\",\n            shape = \"icon\",\n            icon = list(code = \"f2bb\",\n                        size = 45,\n                        color = \"#D86171\")) %>%\n  visGroups(groupname = \"Beneficial Owner\",\n            shape = \"icon\",\n            icon = list(code = \"f2bd\",\n                        size = 45,\n                        color = \"#7fcdbb\")) %>%\n  visLegend() %>%\n  visEdges() %>%\n  addFontAwesome() %>%\n  visOptions(\n  # Specify additional Interactive Elements\n    highlightNearest = list(enabled = T, degree = 2, hover = T),\n  # Add drop-down menu to filter by company name\n    nodesIdSelection = TRUE,\n  # Add drop-down menu to filter by category\n    selectedBy = \"group\",\n    collapse = TRUE) %>%\n  visInteraction(navigationButtons = TRUE)"
  },
  {
    "objectID": "proposal.html",
    "href": "proposal.html",
    "title": "VAST Mini-Challenge 3: Proposal",
    "section": "",
    "text": "change something else hi leo hi hailey\n Fishy Business\n\n Project Overview\nFishEye International, a non-profit focused on countering illegal, unreported, and unregulated (IUU) fishing, has been given access to an international finance corporation’s database on fishing related companies. In the past, FishEye has determined that companies with anomalous structures are far more likely to be involved in IUU (or other “fishy” business). FishEye has transformed the database into a knowledge graph. It includes information about companies, owners, workers, and financial status. FishEye is aiming to use this graph to identify anomalies that could indicate a company is involved in IUU.\nFishEye analysts have attempted to use traditional node-link visualizations and standard graph analyses, but these were found to be ineffective because the scale and detail in the data can obscure a business’s true structure. Can you help FishEye develop a new visual analytics approach to better understand fishing business anomalies?\n\n\n Project Objectives\nThis study aims to address the following tasks in sequence:\n\n1: Identify anomalies in the business groups present in the knowledge graph\n2: Develop a visual analytics process to find similar businesses and group them, focusing on a business’s most important features and present those features clearly to the user.\n3: Measure similarity of businesses that you group in task 2, and express confidence in your groupings visually\n4: Provide evidence for or against the case that anomalous companies are involved in illegal fishing, based on analysis in tasks 1-3, and suggest Which business groups FishEye should investigate further.\n\n\n\n Proposed Methodology\n\n\n\n\nflowchart LR\n  A{Task 1:\\nIdentify\\nAnomalies} -->|patterns?|B[products or\\nservices]\n  A -->|suspicious?|C[revenue]\n  A -->|abnormal?|D[links]\n  A -.- E{Task 2:\\nGrouping} -.- I{Tasks 3&4}\n  E -->|overlaps?|F(Company Contacts)\n  E -->|overlaps?|G(Beneficial Owners)\n  E -->|similarities?|H(Country)\n  E -->|similarities?|C\n  E -->|similarities?|B\n  I --> J([Evaluative Metrics])\n\n\n\n\n\n\n\n\n\n\n Shiny App\nThe proposed Shiny App will be an interactive Network Graph visualising different groups of businesses. It will consist of several tabs, highlighing important information related to the tasks:\nI. Entities with Fishy Data patterns\nII. Grouping options for the Network, visualised in an interactive Network Graph (visNetwork)\nIII. Proposed Clusters based on user input on clustering criteria\nIV. Evaluative metrics applied to Network Graph II"
  }
]