---
title: "Fishy Business"
format:
  html:
    title-block-banner: true
    number-sections: true
    code-fold: true
    code-summary: "show code"
execute:
  warning: false
  message: false
  df_print: paged
---

<font size = "5">**VAST Challenge 2023: Mini-Challenge 3**</font>

# Project Brief

FishEye International, a non-profit focused on countering illegal, unreported, and unregulated (IUU) fishing, has been given access to an international finance corporation's database on **fishing related companies.** In the past, FishEye has determined that companies with anomalous structures are far more likely to be involved in IUU (or other *fishy* business). FishEye has transformed the database into a knowledge graph, including information about companies, owners, workers, and financial status. FishEye is aiming to use this graph to identify anomalies that could indicate if a company is involved in IUU.

**Project Objective:**

This study aims to use visual analytics **to identify anomalies in the business groups present in the knowledge graph**

# Data Preparation

```{r intstall-packages}
#| echo: false
pacman::p_load(jsonlite, tidyverse, lubridate, Hmisc, 
               ggthemes,visNetwork, tidygraph, ggraph, 
               ggiraph, igraph, scales, ggplot2, 
               gganimate, ggstatsplot, ggrain, ggridges, 
               graphlayouts, plotly, patchwork, kableExtra, 
               ggpubr, ggrepel, ggforce, DT)
```

## Loading the Data

`jsonlite` package was used to read .json files

```{r load-mc3}
#| echo: false
mc3 <- fromJSON("data/MC3.json")
```

**mc3 challenge** data is an undirected graph with links and nodes dataframes. These are stored as *lists* instead of vector columns. To transform this into a dataframe, each column is mutated into a character data type using `mutate()` and `as.character()` methods.

```{r}
mc3_links <- as_tibble(mc3$links) %>%
  distinct() %>%
  # Change all variable types to character to create dataframe
  mutate(source = as.character(source),
         target = as.character(target),
         type = as.character(type)) %>%
  group_by(source, target, type) %>%
  summarise(weights = n()) %>%
  filter(source != target) %>%
  select(-weights) %>%
  ungroup

mc3_nodes <- as_tibble(mc3$nodes) %>%
  mutate(id = as.character(id), 
         type = as.character(type), 
         country = as.character(country), 
         product_services = as.character(product_services),
  # Convert to character first to unlist, then revert to numeric form 
         revenue_omu = as.numeric(as.character(revenue_omu))) %>%
  # Reorganize columns 
  select(id, country, type, revenue_omu, product_services)
```

## Data Wrangling

::: panel-tabset

## **Nodes**

**I. Checking for Missing Values:**

```{r}
# Check for columns with missing values
colSums(is.na(mc3_nodes))
```

There are 21,515 missing values from the **revenue_omu** column.

**II. Checking for Duplicates**

```{r}
mc3_nodes[duplicated(mc3_nodes),]
```

There are 2,595 duplicated entries. These are removed so as to prevent skewing of aggregate figures in subsequent analyses:

```{r}
#| warning: false
mc3_nodes <- unique(mc3_nodes)
```

There are several **ids** from the same country and type, but different revenue and products_services values. These are collapsed so as not to skew the analysis:

```{r}
#| message: false
mc3_nodes_new <- mc3_nodes %>%
  group_by(id, country, type) %>%
  summarise(revenue_omu = sum(revenue_omu),
            product_services = paste(product_services, collapse = ", "))
  
```



## **Links**

**I. Checking for Missing Values:**

```{r}
# Check for columns with missing values
colSums(is.na(mc3_links))
```
There are no missing values in mc3_links  

**II. Cleaning up grouped data in Source column**

Source column contains vector-like strings with multiple company names, eg. c("Yu er he  Solutions", "Yu er he  Solutions",). This is extracted and split into separate rows, also duplicating the original values from variables across the columns:

```{r}
mc3_links_new <- mc3_links %>%
  # Extract all text within " "
  mutate(source = str_extract_all(source, '"(.*?)"')) %>%
  # Split into separate rows
  unnest(source) %>%
  # Split phrases by comma ignoring leading spaces
  separate_rows(source, sep = ",\\s*") %>%
  mutate(source = str_remove_all(source, '"')) %>%
  fill(everything())

```


**III. Checking for Duplicates:**

```{r}
mc3_links_new[duplicated(mc3_links_new),]
```

There are 2,238 duplicated rows for **mc3_links** data. These are removed using the `unique()` function:

```{r}
mc3_links_new <- unique(mc3_links_new)
```

:::

# Exploratory Analysis

## Who are the Stakeholders?

:::{ .fishbox .fish data-latex="fish"}  

**Understanding Nodes and Links:**  

* **Nodes data** seems to feature company-level information, detailing the country of operation, type of company (Company, Beneficial Owner or Company Contact), financial status (if available) and products or services rendered by the company
* **Links data** features connections between individuals (target) and companies (source), identifying the nature of the relationship (Beneficial Owner or Company Contact)

:::

The following table summarizes the various entities and possible roles present in the network graph:

| **Entity/Role** |       **Company**       |   **Beneficial Owner**  |   **Company Contact**   |
|-----------------|:-----------------------:|:-----------------------:|:-----------------------:|
| **Company**     | {{< fa circle-check >}} | {{< fa circle-check >}} | {{< fa circle-check >}} |
| **Individual**  | {{< fa xmark >}} | {{< fa circle-check >}} | {{< fa circle-check >}} |  


```{r}
#| fig-width: 8
nodes_type <- mc3_nodes_new %>%
  ggplot(
    aes(x = type)
  ) +
  geom_bar() +
 # Set count annotations above bar
  geom_text(
    stat = "count",
    aes(label = after_stat(count)),
    vjust = -1
  ) +  
 # Ensure than annotations are not cut off
  ylim(0, 11000) +
  labs(
    title = "Highest Count of Company\nNodes as Beneficial Owners "
  ) +
  theme_fivethirtyeight()+
  theme(
    axis.title.y = element_blank(),
    axis.title.x = element_blank(),
    panel.background = element_rect(fill="#dfdfeb",colour="#dfdfeb"),
    plot.background = element_rect(fill="#dfdfeb",colour="#dfdfeb")
  )

links_type <- mc3_links_new %>%
  ggplot(
    aes(x = type)
  ) +
  geom_bar() +
 # Set count annotations above bar
  geom_text(
    stat = "count",
    aes(label = after_stat(count)),
    vjust = -1
  ) +  
 # Ensure than annotations are not cut off
  ylim(0, 11000) +
  labs(
    title = "Slightly More Individual\nOwners than Contacts"
  ) +
  theme_fivethirtyeight()+
  theme(
    axis.title.y = element_blank(),
    axis.title.x = element_blank(),
    axis.ticks.y = element_blank(), 
    axis.text.y = element_blank(),
    panel.background = element_rect(fill="#dfdfeb",colour="#dfdfeb"),
    plot.background = element_rect(fill="#dfdfeb",colour="#dfdfeb")
  )

all_type <- nodes_type + links_type
all_type & theme(plot.background = element_rect(fill="#dfdfeb",colour="#dfdfeb"))
```

## Are there Entities with Multiple Roles or Links?  

::: panel-tabset

## **Nodes With Multiple Roles**

```{r}
nodes_count <- mc3_nodes_new %>%
  group_by(id, type) %>%
  summarise(count = n()) %>%
  ungroup() %>%
  pivot_wider(names_from = type, values_from = count, values_fill = 0) %>%
  arrange(desc(Company)) %>%
  kbl() %>%
  kable_styling(bootstrap_options = c("striped", "hover", "condensed")) %>%
  scroll_box(width = "100%", height = "300px")

nodes_count
```  


## **Individuals with Multiple Roles**

```{r}
links_count <- mc3_links_new %>%
  group_by(target,type) %>%
  summarise(count = n()) %>%
  ungroup() %>%
  pivot_wider(names_from = type, values_from = count, values_fill = 0) %>%
  arrange(desc(`Beneficial Owner`))

links_multiple <- links_count %>%
  filter(`Beneficial Owner` >=1 & `Company Contacts` >= 1)%>%
  kbl() %>%
  kable_styling(bootstrap_options = c("striped", "hover", "condensed")) %>%
  scroll_box(width = "100%", height = "300px")

links_multiple
```

:::  

## Where are the Companies Operating? 

```{r}
#| fig-width: 8
# Aggregate data frame by country and type
nodes_agg <- mc3_nodes_new %>%
  group_by(country, type) %>%
  # Count number of companies per country
  summarise(count = n(),
  # Calculate total revenue per country
            revenue_omu = sum(revenue_omu)) %>%
  ungroup()


# Create separate plots for each type
p_company <- nodes_agg %>%
  # Only plot countries with more than 100 companies
  filter(type == "Company" &
           count > 100) %>%
  ggplot(
  # Arrange in Descending order of count
    aes(x = fct_rev(fct_reorder(country, count)),
        y = count)
  ) +
  geom_col() +
  # Set to prevent trunctation when patched
  ylim(0,3800) +
  geom_text(
    aes(label = count),
    vjust = -1
  ) +  #< Set count annotations above bar
  labs(
    title = "Most Number of Companies Operating from ZH"
  ) +
  theme_fivethirtyeight()+
  theme(
    axis.title.y = element_blank(),
    axis.title.x = element_blank(),
    axis.text.y = element_blank(),
    panel.background = element_rect(fill="#dfdfeb",colour="#dfdfeb"),
    plot.background = element_rect(fill="#dfdfeb",colour="#dfdfeb")
  )

# Plot for company contacts
p_contact <- nodes_agg %>%
  # Only plot countries with more than 100 companies
  filter(type == "Company Contacts") %>%
  ggplot(
  # Arrange in Descending order of count
    aes(x = fct_rev(fct_reorder(country, count)),
        y = count)
  ) +
  geom_col() +
  geom_text(
    aes(label = count),
    vjust = -1
  ) + 
  ylim(0,10000) +
  labs(
    title = "Company Contacts"
  ) +
  theme_fivethirtyeight()+
  theme(
    axis.title.y = element_blank(),
    axis.title.x = element_blank(),
    axis.text.y = element_blank(),
    panel.background = element_rect(fill="#dfdfeb",colour="#dfdfeb"),
    plot.background = element_rect(fill="#dfdfeb",colour="#dfdfeb")
  )

# Plot for beneficial owners
p_owner <- nodes_agg %>%
  # Only plot countries with more than 100 companies
  filter(type == "Beneficial Owner") %>%
  ggplot(
  # Arrange in Descending order of count
    aes(x = fct_rev(fct_reorder(country, count)),
        y = count)
  ) +
  geom_col() +
  geom_text(
    aes(label = count),
    vjust = -1
  ) +
  ylim(0,13000) +
  labs(
    title = "Beneficial Owners"
  ) +
  theme_fivethirtyeight()+
  theme(
    axis.title.y = element_blank(),
    axis.title.x = element_blank(),
    axis.text.y = element_blank(),
    panel.background = element_rect(fill="#dfdfeb",colour="#dfdfeb"),
    plot.background = element_rect(fill="#dfdfeb",colour="#dfdfeb")
  )

bottompatch <- (p_contact + p_owner) +
  plot_annotation(title = "Almost all Company Contacts & Beneficial Owners from ZH")

fullpatch <- p_company / bottompatch
fullpatch & theme(plot.background = element_rect(fill="#dfdfeb",colour="#dfdfeb"))
```
## Are there Entities with Transboundary Operations?  

The fishing industry is a transboundary operation, and vessels or companies that operate between different jurisdictions may often evade law enforcement authorities. Companies with multiple entries and listed countries could be related to *fishy* activity. These are filtered and visualised: 

```{r}
nodes_count_country <- mc3_nodes_new %>%
  group_by(id, country) %>%
  summarise(roles = n()) %>%
  ungroup %>%
  group_by(id) %>%
  summarise(country_count = n(),
            roles = sum(roles)) %>%
  ungroup() %>%
  arrange(desc(country_count)) %>%
  kbl() %>%
  kable_styling(bootstrap_options = c("striped", "hover", "condensed")) %>%
  scroll_box(width = "100%", height = "300px")

nodes_count_country
```

:::{ .fishbox .fish data-latex="fish"}  

**Insights from Explorations:**  

From the data presented above, it seems as though there are multiple Entities operating across country borders. The number of countries listed match the count of roles, which suggests that these entities may be involved in multiple sub-network clusters within the overall network. 

:::




**References**

Copeland, Duncan, et al. "Spotlight on: The Exploitation of Company Structures by Illegal Fishing Operators." TMT, C4ADS, 2020. Accessed 20 June 2023. https://1ae03060-3f06-4a5c-9ac6-b5c1b4a62664.usrfiles.com/ugd/1ae030_4e59a8cf86364c1a83eb385cb57619f7.pdf



