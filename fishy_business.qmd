---
title: "Fishy Business"
title-block-banner: "images/landing.png"
format:
  html:
    number-sections: true
    code-fold: true
    warning: false
    message: false
---

<font size = "5">**VAST Challenge 2023: Mini-Challenge 3**</font>

# Project Brief

FishEye International, a non-profit focused on countering illegal, unreported, and unregulated (IUU) fishing, has been given access to an international finance corporation's database on **fishing related companies.** In the past, FishEye has determined that companies with anomalous structures are far more likely to be involved in IUU (or other *fishy* business). FishEye has transformed the database into a knowledge graph, including information about companies, owners, workers, and financial status. FishEye is aiming to use this graph to identify anomalies that could indicate if a company is involved in IUU.

**Project Objective:**

This study aims to use visual analytics to   

* **identify anomalies in the business groups present in the knowledge graph**
* **develop a visual analytics process to find similar companies and group them**
* **focus on presenting key features of the business to the user**

# Data Preparation

## R Packages

The following packages are used for this study:  

* `jsonlite` to read and process raw .json data files
* `tidyverse`, a collection of packages for data analysis (particularly `dplyr` for data manipulation)
* `skimr` and ` Hmisc` for generating summary statistics of dataframes and variables
* `kable` and `kableExtra` for styling tables from dataframes
* `ggplot2` and `ggpubr` for plot visualisations
* `scales` to complement `ggplot2`, specifically for specifying axes breaks 
* `ggrain` for raincloud plots to visualise density distributions
* `patchwork` for multiple plot layouts
* `visNetwork` for network graph visualisations
* `ggthemes` to standardise plot aesthetics 


```{r intstall-packages}
#| message: false
pacman::p_load(jsonlite, tidyverse, skimr, Hmisc, kable, kableExtra, ggplot2, scales, ggthemes,visNetwork, tidygraph, ggrain, patchwork, ggpubr)
```

## Unpacking the Data

`jsonlite` package was used to read .json files

```{r load-mc3}
#| code-fold: false
mc3 <- fromJSON("data/MC3.json")
```

**mc3 challenge** data is an undirected graph with links and nodes dataframes. These are stored as *lists* instead of vector columns. Nodes and Links are extracted as separate dataframes for analysis from the .json file: 

```{r}
mc3_links <- as_tibble(mc3$links) %>%
  # Change all variable types to character to create dataframe
  mutate(source = as.character(source),
         target = as.character(target),
         type = as.character(type)) %>%
  group_by(source, target, type) %>%
  summarise(weights = n()) %>%
  filter(source != target) %>%
  ungroup()

mc3_nodes <- as_tibble(mc3$nodes) %>%
  mutate(id = as.character(id), 
         type = as.character(type), 
         country = as.character(country), 
         product_services = as.character(product_services),
  # Convert to character first to unlist, then revert to numeric form 
         revenue_omu = as.numeric(as.character(revenue_omu))) %>%
  # Reorganize columns 
  select(id, country, type, revenue_omu, product_services)
```

::: panel-tabset

## **Nodes**

```{r}
#| echo: false
skim(mc3_nodes)
```  

:::{ .fishbox }  

Summary statistics of **Nodes** data shows that there are 27622 rows but fewer unique ids (22929). This suggests that there are either duplicated rows in the data, or ids could have different entries with variations in data for different columns (eg company operating in different countries will have 1 row per country operating in).  

`product_services` also has 3244 unique values, with character range of 4- 1737, indicating a need to recode the descriptions of products or services into usable categories for further analysis. 

`revenue_omu` has 21515 missing values, representing companies that have unreported revenue. This may be a possible indicator of *fishy* activity. The histogram and percentile values displayed also suggests a **highly right-skewed distribution of revenue**. 

:::

## **Links**

```{r}
#| echo: false
skim(mc3_links)
```  

:::{ .fishbox }  

Summary statistics of **Links** data reports 12856 unique source and 21265 unique target ids. As this dataframe lists out the links between companies (source) and individuals (target), this reveals that some companies may be linked to multiple individuals.   

`weights` refers to the sum of rows grouped by source, target and type. This is mainly **1**, with some **2s** suggesting duplicates in the data. 

:::

:::

## Data Wrangling

::: panel-tabset  

## **I. Nodes**

**I. Checking for Duplicates**

```{r}
mc3_nodes[duplicated(mc3_nodes),]
```

There are 2,595 duplicated entries. These are removed so as to prevent skewing of aggregate figures in subsequent analyses:

```{r}
#| warning: false
mc3_nodes <- unique(mc3_nodes)
```

**II. Are there nodes with multiple listings of products/services?**

```{r}
mc3_nodes_agg1 <- mc3_nodes %>%
  group_by(id, country, type) %>%
  summarise(count_prod = n(),
            revenue_omu = sum(revenue_omu)) %>%
  ungroup() %>%
  arrange(desc(count_prod))

kable(head(mc3_nodes_agg1, 10)) %>%
  kable_styling(bootstrap_options = c("striped", "hover", "condensed", "responsive"))
```


There are several **ids** from the same country and type, but different listing of products_services values. These nodes also have unreported **revenue_omu**, which could be an indicator of *fishy* activity, where same companies report different products/services in the ledger to avoid detection. The **products_services** column is collapsed so as to give a clearer picture of the company activity: 

```{r}
#| message: false
mc3_nodes_new <- mc3_nodes %>%
  group_by(id, country, type) %>%
  summarise(revenue_omu = sum(revenue_omu),
            product_services = paste(product_services, collapse = ", "))

kable(head(mc3_nodes_new, 10)) %>%
  kable_styling(bootstrap_options = c("striped", "hover", "condensed", "responsive"))
```  


## **II. Links**

**How many links are there per company?**

```{r}
links_count <- mc3_links %>%
  group_by(source) %>%
  summarise(count = n()) %>%
  ungroup() %>%
  arrange(desc(count))

kable(head(links_count, 10)) %>%
  kable_styling(bootstrap_options = c("striped", "hover", "condensed", "responsive"))
```  

```{r}
Hmisc::describe(links_count)
```


Aggregation of the **source** variable reveals that there are companies with large numbers of links. This distribution is also highly right-skewed, indicating that most companies only recorded a single link. As more links point toward larger (and often more complex) networks, this could be an indicator of possible *fishy* activity.   


**II. Cleaning up grouped data in Source column**

The aggregated dataframe also revealed that the Source column contains vector-like strings with multiple company names, eg. *c("The Sea Turtle Company", "The Sea Turtle Company") and c("Haryana s Catchers ОАО Enterprises", "Drakensberg Limited Liability Company").*  This is extracted and split into separate rows, also duplicating the original values from variables across the columns:

```{r}
#| code-fold: false
mc3_links_new <- mc3_links %>%
  # Extract all text within " "
  mutate(source = str_extract_all(source, '"(.*?)"')) %>%
  # Split into separate rows
  unnest(source) %>%
  # Split phrases by comma ignoring leading spaces
  separate_rows(source, sep = ",\\s*") %>%
  mutate(source = str_remove_all(source, '"')) %>%
  fill(everything())

```

**III. Checking for duplicated: rows**

```{r}
mc3_links_new[duplicated(mc3_links_new),]
```

There are 2,238 duplicated rows for **mc3_links** data. These are removed using the `unique()` function:

```{r}
mc3_links_new <- unique(mc3_links_new)
```


:::

# Exploratory Analysis

## Multiple Roles


## Who are the Stakeholders?

:::{ .fishbox .fish data-latex="fish"}  

**Understanding Nodes and Links:**  

* **Nodes data** seems to feature company-level information, detailing the country of operation, type of company (Company, Beneficial Owner or Company Contact), financial status (if available) and products or services rendered by the company
* **Links data** features connections between individuals (target) and companies (source), identifying the nature of the relationship (Beneficial Owner or Company Contact)

:::

The following table summarizes the various entities and possible roles present in the network graph:

| **Entity/Role** |       **Company**       |   **Beneficial Owner**  |   **Company Contact**   |
|-----------------|:-----------------------:|:-----------------------:|:-----------------------:|
| **Company**     | {{< fa circle-check >}} | {{< fa circle-check >}} | {{< fa circle-check >}} |
| **Individual**  | {{< fa xmark >}} | {{< fa circle-check >}} | {{< fa circle-check >}} |  


```{r}
#| fig-width: 8
nodes_type <- mc3_nodes_new %>%
  ggplot(
    aes(x = type)
  ) +
  geom_bar() +
 # Set count annotations above bar
  geom_text(
    stat = "count",
    aes(label = after_stat(count)),
    vjust = -1
  ) +  
 # Ensure than annotations are not cut off
  ylim(0, 11000) +
  labs(
    title = "Highest Count of Company\nNodes as Beneficial Owners "
  ) +
  theme_fivethirtyeight()+
  theme(
    axis.title.y = element_blank(),
    axis.title.x = element_blank(),
    panel.background = element_rect(fill="#dfdfeb",colour="#dfdfeb"),
    plot.background = element_rect(fill="#dfdfeb",colour="#dfdfeb")
  )

links_type <- mc3_links_new %>%
  ggplot(
    aes(x = type)
  ) +
  geom_bar() +
 # Set count annotations above bar
  geom_text(
    stat = "count",
    aes(label = after_stat(count)),
    vjust = -1
  ) +  
 # Ensure than annotations are not cut off
  ylim(0, 11000) +
  labs(
    title = "Slightly More Individual\nOwners than Contacts"
  ) +
  theme_fivethirtyeight()+
  theme(
    axis.title.y = element_blank(),
    axis.title.x = element_blank(),
    axis.ticks.y = element_blank(), 
    axis.text.y = element_blank(),
    panel.background = element_rect(fill="#dfdfeb",colour="#dfdfeb"),
    plot.background = element_rect(fill="#dfdfeb",colour="#dfdfeb")
  )

all_type <- nodes_type + links_type
all_type & theme(plot.background = element_rect(fill="#dfdfeb",colour="#dfdfeb"))
```

## Are there Entities with Multiple Roles or Links?  

::: panel-tabset

## **Nodes With Multiple Roles**

```{r}
nodes_count <- mc3_nodes_new %>%
  group_by(id, type) %>%
  summarise(count = n()) %>%
  ungroup()

nodes_pivot <- nodes_count %>%
  pivot_wider(names_from = type, values_from = count, values_fill = 0) %>%
  arrange(desc(Company)) 

head(nodes_pivot,10)
```  


## **Individuals with Multiple Roles**

```{r}
links_count <- mc3_links_new %>%
  group_by(target,type) %>%
  summarise(count = n()) %>%
  ungroup()

links_pivot <- links_count %>%
  pivot_wider(names_from = type, values_from = count, values_fill = 0) %>%
  arrange(desc(`Beneficial Owner`))

links_multiple <- links_pivot %>%
  filter(`Beneficial Owner` >=1 & `Company Contacts` >= 1)

head(links_multiple, 10)
```

:::  

## Where are the Companies Operating? 

```{r}
#| fig-width: 8
# Aggregate data frame by country and type
nodes_agg <- mc3_nodes_new %>%
  group_by(country, type) %>%
  # Count number of companies per country
  summarise(count = n(),
  # Calculate total revenue per country
            revenue_omu = sum(revenue_omu)) %>%
  ungroup()


# Create separate plots for each type
p_company <- nodes_agg %>%
  # Only plot countries with more than 100 companies
  filter(type == "Company" &
           count > 100) %>%
  ggplot(
  # Arrange in Descending order of count
    aes(x = fct_rev(fct_reorder(country, count)),
        y = count)
  ) +
  geom_col() +
  # Set to prevent trunctation when patched
  ylim(0,3800) +
  geom_text(
    aes(label = count),
    vjust = -1
  ) +  #< Set count annotations above bar
  labs(
    title = "Most Number of Companies Operating from ZH"
  ) +
  theme_fivethirtyeight()+
  theme(
    axis.title.y = element_blank(),
    axis.title.x = element_blank(),
    axis.text.y = element_blank(),
    panel.background = element_rect(fill="#dfdfeb",colour="#dfdfeb"),
    plot.background = element_rect(fill="#dfdfeb",colour="#dfdfeb")
  )

# Plot for company contacts
p_contact <- nodes_agg %>%
  # Only plot countries with more than 100 companies
  filter(type == "Company Contacts") %>%
  ggplot(
  # Arrange in Descending order of count
    aes(x = fct_rev(fct_reorder(country, count)),
        y = count)
  ) +
  geom_col() +
  geom_text(
    aes(label = count),
    vjust = -1
  ) + 
  ylim(0,10000) +
  labs(
    title = "Company Contacts"
  ) +
  theme_fivethirtyeight()+
  theme(
    axis.title.y = element_blank(),
    axis.title.x = element_blank(),
    axis.text.y = element_blank(),
    panel.background = element_rect(fill="#dfdfeb",colour="#dfdfeb"),
    plot.background = element_rect(fill="#dfdfeb",colour="#dfdfeb")
  )

# Plot for beneficial owners
p_owner <- nodes_agg %>%
  # Only plot countries with more than 100 companies
  filter(type == "Beneficial Owner") %>%
  ggplot(
  # Arrange in Descending order of count
    aes(x = fct_rev(fct_reorder(country, count)),
        y = count)
  ) +
  geom_col() +
  geom_text(
    aes(label = count),
    vjust = -1
  ) +
  ylim(0,13000) +
  labs(
    title = "Beneficial Owners"
  ) +
  theme_fivethirtyeight()+
  theme(
    axis.title.y = element_blank(),
    axis.title.x = element_blank(),
    axis.text.y = element_blank(),
    panel.background = element_rect(fill="#dfdfeb",colour="#dfdfeb"),
    plot.background = element_rect(fill="#dfdfeb",colour="#dfdfeb")
  )

bottompatch <- (p_contact + p_owner) +
  plot_annotation(title = "Almost all Company Contacts & Beneficial Owners from ZH")

fullpatch <- p_company / bottompatch
fullpatch & theme(plot.background = element_rect(fill="#dfdfeb",colour="#dfdfeb"))
```
## Are there Entities with Transboundary Operations?  

The fishing industry is a transboundary operation, and vessels or companies that operate between different jurisdictions may often evade law enforcement authorities. Companies with multiple entries and listed countries could be related to *fishy* activity. These are filtered and visualised: 

```{r}
nodes_count_country <- mc3_nodes_new %>%
  group_by(id, country) %>%
  summarise(roles = n()) %>%
  ungroup %>%
  group_by(id) %>%
  summarise(country_count = n(),
            roles = sum(roles)) %>%
  ungroup() %>%
  arrange(desc(country_count))

head(nodes_count_country, 10)
```  
 
   
   

:::{ .fishbox .fish data-latex="fish"}  

**Insights from Explorations:**  

* From the data presented above, it seems as though there are multiple Entities operating across country borders.  
* The number of countries listed match the count of roles, which suggests that these entities may be involved in multiple sub-network clusters within the overall network. 

:::

## **How much revenue is being reported by the Companies?**  

```{r}
#| fig-width: 8

# Only feature data from Companies
company_nodes <- mc3_nodes_new %>%
  filter(type == "Company")

company_rev <-
  ggplot(company_nodes, 
       aes(x = 1, 
           y = revenue_omu)
  ) +
  geom_rain(
    color = "grey20",
    alpha = .5
  ) +
  scale_y_continuous(
    breaks = scales::pretty_breaks(n=5),
    labels = scales::dollar
  ) +
  labs(
    title = "Skewed Distribution of Revenue\nSuggests Range of Company Sizes"
  ) +
  theme_fivethirtyeight()+
  theme(
    axis.ticks.y = element_blank(),
    axis.title = element_blank(),
    axis.text.y = element_blank(),
    panel.background = element_rect(fill="#dfdfeb",colour="#dfdfeb"),
    plot.background = element_rect(fill="#dfdfeb",colour="#dfdfeb")
  ) +
  coord_flip()

company_rev

```

:::{ .fishbox .fish data-latex="focus"}  

Distribution of  revenue as well as quantile values show a **highly right-skewed distribution**, which could be an indication of company size. To use this variable for further classification of anomalous groups, revenue is binned by percentile and assigned a label. As missing Revenue values could be a data lapse issue, or a sign of concealing possible *fishy* actvity, whis is kept as a separate category for further analysis:

* Above 80th Percentile: 1
* 60-80th Percentile: 2
* 40-60th Percentile: 3
* 20-40th Percentile: 4
* Below 20th Percentile: 5
* Missing Values : NA

:::

```{r}
#| fig-width: 8
# Calculate the percentiles
percentiles <- quantile(mc3_nodes_new$revenue_omu, 
                        probs = c(0, 0.2, 0.4, 0.6, 0.8, 1),
                        na.rm = TRUE)

# Create a new column and assign labels based on percentiles
mc3_nodes_new$revenue_group <- cut(mc3_nodes_new$revenue_omu, 
                                   breaks = percentiles, 
                                   labels = c(5, 4, 3, 2, 1), 
                                   include.lowest = TRUE)

# Barchart of revenue group
ggplot(
  mc3_nodes_new, 
  aes(x = revenue_group)
  ) +
  geom_bar() +
  labs(
    # Linebreak added to title so it does not get truncated
    title = "Highest Count of Missing Revenue Reports\nfrom Beneficial Owners", 
    x = "Revenue Group",
    y = NULL
  ) +
  geom_text(
    stat = "count",
    aes(label = after_stat(count)),
    vjust = -1
  ) +
  ylim(0,11000) +
  theme_fivethirtyeight()+
  theme(
    text = element_text(size = 12),
    panel.background = element_rect(fill="#dfdfeb",colour="#dfdfeb"),
    plot.background = element_rect(fill="#dfdfeb",colour="#dfdfeb")
  ) +
  facet_wrap(~type)

```  
  
# Exploring Anomalous Structures  

Based on initial analysis, there is an avenue to explore the relationship between different variables to sieve out anomalous groups within the overall network: 

```{mermaid}
%%| fig-width: 7
%%{
  init: {
    "theme": "base",
    "themeVariables": {
      "primaryColor": "#d8e8e6",
      "primaryTextColor": "#325985",
      "primaryBorderColor": "#325985",
      "lineColor": "#325985",
      "secondaryColor": "#cedded",
      "tertiaryColor": "#fff" 
      }
  }
}%%

flowchart LR
    A{Overall\nNetwork} --> B{Fishy\nCompanies}
    B --> C(Company Structure)
    B --> D(Financial Status) -.->E[High Revenue]
    D -.-> F[Unreported Revenue]
    C -.->|Overlapping?|G[Beneficial Owners]
    C -.->|Overlapping?|H[Company Contacts]
    B --> I(Transboundary\nOperations)

```  


In a report published by Trygg Mat Tracking (TMT), an international not-for-profit organisation that investigates illegal fishing operations and associated crimes, many *fishy* operators use **Shell Companies, Front companies and joint ventures to cover up illegal operations with complex company structures so as to conceal the Ultimate Beneficial Ownership (UBO).** (2020)  

Revealing the company ownership and company contact structure through network graph visualisations of different groups could help uncover hidden patterns and owners in the network. This will give a better sense of how the individual records listed in the **links** data are related, as well as sieve out possible *fishy* patterns. 



```{r}
# Find all nodes in links data
links_source <- mc3_links_new %>%
  distinct(source) %>%
  rename("id" = "source")

links_target <- mc3_links_new %>%
  distinct(target) %>%
  rename("id" = "target")

links_nodes <- bind_rows(links_source, links_target) %>%
  distinct()
```  

```{r}
#Get links_nodes that are not in original nodes dataframe
missing_nodes <- links_nodes %>%
  anti_join(mc3_nodes_new, by = "id")

#Get role of links_nodes from links dataframe
missing_nodes <- missing_nodes %>%
  left_join(mc3_links_new, by = join_by("id" == "target")) %>%
  select(id, type) %>%
  # Categorise as "unknown" if there is no type
  mutate(type = if_else(is.na(type), "Unknown", type),
         country = "Unknown",
         revenue_group = "NA",
         product_services = "Unknown") %>%
  select(id, country, type, product_services, revenue_group)

# merge with original nodes dataframe
mc3_nodes_new <- mc3_nodes_new %>%
  select(-revenue_omu) 

full_nodes <- bind_rows(mc3_nodes_new, missing_nodes)
```


# Adding Counts to nodes dataframe
full_nodes <- full_nodes %>%
  group_by(id, type) %>%
  summarize(country_count = n(),
            product_services = paste(product_services, collapse = ","),
            revenue_group = max(revenue_group)) %>%
  ungroup()


  left_join(nodes_pivot, by = "id") %>%
  select(id, Company, `Beneficial Owner`, `Company Contacts`, product_services, revenue_group)






The following filters are used to investigate possible 'groups' and anomalies:  

* High Revenue & Companies with Higher numbers of Beneficial Owners
* Beneficial Owners of higher number of Companies
* Company Contacts of Companies with Unreported Revenue 
* Companies Operating in multiple countries

**References**

Copeland, Duncan, et al. "Spotlight on: The Exploitation of Company Structures by Illegal Fishing Operators." TMT, C4ADS, 2020. Accessed 20 June 2023. https://1ae03060-3f06-4a5c-9ac6-b5c1b4a62664.usrfiles.com/ugd/1ae030_4e59a8cf86364c1a83eb385cb57619f7.pdf



